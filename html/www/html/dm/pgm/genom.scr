'---------------------------------------------------------------------------
' Paradigm Plus 2.0, Copyright 1990-94 ProtoSoft Inc.  All Rights Reserved.
'
' FILE: genom.scr -  Generate Object Model Report
'
'---------------------------------------------------------------------------
'| Who | Date     | Description
'|-----|----------|---------------------------------------------------------
'|     |          | Initial implementation. 
'|-----|----------|---------------------------------------------------------

'Note: One Class on a page can be obtained by openning the script output
'      file in a Wordprocessor like MS Word
'------------------------------------------------------------------------

gosub initialization
meta_class$ = "class"
gosub create_report
end


'------------------------------------------------------
' Initialization
'------------------------------------------------------
Initialization:
   dashLine$ = "------------------------------------------------------------------------------------"
   print 
   print "Object Model Report"
   print "_____________________________________________________"
   print 
   print "Generated by Paradigm Plus on: ", Time$
   print 
   print "Paradigm: ", Paradigm$
   print "Project:  ", App$
   print
return

'---------------------------------------------------------------------------
'                              Create_Report
'---------------------------------------------------------------------------
Create_Report:
foreach class
   n$ = name$        
	if Meta_Class$ <> "Class_Object" then print  "Class Name     : ", name$ else print  "Class_Object  : ", name$
	Print
	Print
	print  "   Description"
	print  "   --------------------------------------------------------------------------------------------------"
	'Print
	if Description$ <> "" then Print  "                ",Description$
	File$ = Document$
	if File$ <> "" AND EXIST(File, File$) then  'Added extra conditon to check if file exists - SG:08/17/94
	  Open File$ For Input as 1
	  While EOF(#1) <> 1
	    Line Input #1, InputLine$
	    print  "       ",InputLine$
	  Wend 'Reading the file
	end if 'If File exsist
	print
	Print  "   ",name$:20, " is Subclass of":25," is Superclass of"
	print  "   --------------------------------------------------------------------------------------------------"

	'print  name$:32

	gosub Do_Generalizations

	print
	'if Pr_Ty = 4 then gosub Do_Instance
	print
	print "   ", "Attribute":25,"Data Type":25,"Initial Value"
	print  "   --------------------------------------------------------------------------------------------------"
	AttCount = 0
	Att$ = Meta_Class$ +".Attribute"
	foreach Att$
		if size$<>"" then
		  print " ":3, name$:25,type$,"[",size$,"]":18,Initial_Value$
		  AttCount = AttCount + 1
		else
		  print " ":3,  name$:25,type$:25,Initial_Value$
		  AttCount = AttCount + 1
		end if
	next
	if AttCount = 0 then print  " ":38,"--None--"
	print
	print " ":3, "Operation":25,"Return Type":25,"Formal Parameters"
	print  "   --------------------------------------------------------------------------------------------------"
	'print
	OppCount = 0
	Opp$ = Meta_Class$ + ".Operation"
	foreach Opp$
		Print " ":3,  name$:25,Return_Type$:25,formal_parameters$
		OppCount = OppCount + 1
	next
	if Oppcount = 0 then print  " ":38,"--None--"
	print
	print
	print
	print " ":3, "Relationship":25,"Related to":25,"Type":15,"Multiplicity      "
	print  "   --------------------------------------------------------------------------------------------------"
	'print
   if paradigm$ ="Fusion" or paradigm$ ="Coad_you" or paradigm$ = "Shlaer_M" then
      foreach class.relationship
	      gosub GetRelationMultiplicity 'To get teh multiplicity of the relationship

	 if relationship.destination = n$ then gosub reversemul
 
	      print " ":3, relationship.name:25,name$:25,"Relationship":15,relationmultiplicity$
	   next
   else
      foreach class.association
	      gosub GetRelationMultiplicity 'To get teh multiplicity of the relationship
	 if association.destination = n$ then gosub reversemul

	      print " ":3, association.name:25,name$:25,"Association":15,relationmultiplicity$
	   next
   end if
   if paradigm$ <> "Shlaer_M" then
      foreach class.aggregation
	 if paradigm$ <> "fusion" then
	    gosub GetRelationMultiplicity 'To get teh multiplicity of the relationship
		 print " ":3, aggregation.name:25,name$:25,"Aggregation":15,relationmultiplicity$
	 else
	    mul$ = "1:"
	    if cardinality$ = "N" then ca$ = "m" else car$=cardinality$
	    mul$ = mul$ + car$
	    print " ":28, name$:25, "Aggregation":15,  mul$
	 end if
	   next
   end if

	print
	print
	print
'print CHR$(12)
close 1
next
return 'create report

'---------------------------------------------------------------------------
'                              Do_Generalizations
'---------------------------------------------------------------------------
Do_Generalizations:

  if paradigm$ = "Shlaer_M" then
      foreach class.superclass 
	print  " ":27, class.name
      next
      foreach class.subclass 
	print " ":52, class.name
      next
  elseif paradigm$ = "booch" then
      foreach class.inheritance 
	print " ":27, class.name
      next
      foreach class.ancestor 
	print  " ":52, class.name
      next
  else  
      foreach class.generalization 
	print " ":27, class.name
      next
      foreach class.specialization 
	print  " ":52, class.name
      next
  end if
 
return



'---------------------------------------------------------------------------
'                              Initialize_Relations
'---------------------------------------------------------------------------
Initialize_Relations:
DIM Relations$(30)
 Counter = 0
 foreach metaclass
   if name$ = Meta_Class$ then
     foreach metaclass.metarelationship
       Counter = Counter + 1
       Relations$(Counter) = name$
     next
   end if
 next
return

'---------------------------------------------------------------------------
'                              Do_Instance:
'---------------------------------------------------------------------------
Do_Instance:
print  "Instance of   : "
if Meta_Class$ <> "Class" then
  Cl_Ins$ = Meta_Class$ + ".Class_Instance"
  foreach Cl_Ins$
    print " ":30,name$,"  -  Class Instance"
  next
else
  Cl_Ob_Ins$ = Meta_Class$ + ".Instance"
  foreach Cl_Ob_Ins$
    print " ":30,name$,"  -  Class_Object Instance"
  next
end if
return


'---------------------------------------------------------------------------
'                              GetRelationMultiplicity
'---------------------------------------------------------------------------
GetRelationMultiplicity:
'Within the scope of a class.association or qualifier.association
'Determines nature of relationship

if (multiplicity1$ = "exactly one") then
	relationmultiplicity$="1:"
	gosub Check_Multiplicity2
elseif (multiplicity1$ = "Many" or multiplicity1$ ="many conditional") then
	relationmultiplicity$="m:"
	gosub Check_Multiplicity2
elseif (multiplicty1$= "optional" or multiplicity1$ = "one conditional") then
	relationmultiplicity$="0:"
	gosub Check_Multiplicity2
else    ' one or more
	relationmultiplicity$="1+:"
	gosub Check_Multiplicity2

end if

return

'---------------------------------------------------------------------------
'                              Check_Multiplicity2
'---------------------------------------------------------------------------
Check_Multiplicity2:
if (multiplicity2$ = "exactly one") then
	relationmultiplicity$=relationmultiplicity$+"1"
elseif (multiplicity2$= "Many" or multiplicity2$ = "many conditional") then
	relationmultiplicity$=relationmultiplicity$+"m"
elseif (multiplicity2$= "Optional" or multiplicity2$ = "one conditional") then
	relationmultiplicity$=relationmultiplicity$+"0"
else
	' one or more
	relationmultiplicity$=relationmultiplicity$+"1+"
end if
return

'-----------------------------------
' reverseMul
'----------------------------------
reverseMul:
  ln = len(relationmultiplicity$)
  pos = instr(relationmultiplicity$, ":")
  l$=left$(relationmultiplicity$, pos-1)
  r$ =right$(relationmultiplicity$, ln-pos)
  relationmultiplicity$ = r$ +":"+l$      
return
