%!PS-Adobe-2.0
%%Title: MT Calibrations
%%Creator: XVT PostScript Print Driver (mods by Mike Cowley)
%%CreationDate: Tue Aug 18 15:06:02 1998
%%BoundingBox: 0 0 2550 3300
%%Orientation: Portrait
%%Pages: (atend)
%%EndComments
/PROLOGUE 100 dict def
PROLOGUE begin
/res 300 def
% XVT PostScript Driver Prolog
% Copyright 1990 XVT Software Inc. All rights reserved. May be distributed
% and used only by applications written with an XVT toolkit supplied by
% XVT Software Inc.
%
% Problems:
% Text:
%	- opaque_text not honored; always FALSE (therefore, back_color ignored)
% Brushes:
%	- back_color not honored; always white
% Not done yet:
%	- draw_aline [l^ fcn is here]

% --------- Prolog ------------------

% Following based on Program 3 in the Blue Book
%(PostScript Lanuage: Tutorial and Cookbook)
% Usage: startangle endangle xrad yrad x_center y_center ellipse

/ellipse {
	/savematrix matrix currentmatrix def
	translate
	scale
	0 0 1 4 index 4 index arc pop pop
	savematrix setmatrix
} bind def

% End of Program 3.

% Following taken from Listing 3-4 in Greek Book
% (PostScript Language: Program Design), except for inclusion of "mul"
% and arrowheadscale arg in l^
% Also, coordinates adjusted to put tip of arrow nearer to current point

% "arrowhead" takes these arguments:
% lineweight prevX prevY
 /arrowhead { %def
	gsave
		currentpoint
		4 2 roll exch 4 -1 roll exch
		sub 3 1 roll sub
		exch atan rotate dup dup 0 rmoveto scale
%		-1 2 rlineto
%		7 -2 rlineto
%		-7 -2 rlineto
		-7 2 rlineto
		1 -2 rlineto
		-1 -2 rlineto
		closepath fill
	grestore
	newpath
 } bind def
 % x y arrowheadscale l^
 /l^ { %def    % lineto-arrow
	currentlinewidth mul currentpoint 5 3 roll
	lineto
	currentpoint stroke moveto
	arrowhead
 } bind def

% End of Listing 3-4 extract.

% Following comes from Listing 9-1 of the Green Book
% (PostScript Language: Program Design). Changes are marked with "MJR".

% width height matrix proc key cache
% definepattern -\> font
/definepattern { %def
	7 dict begin
		/FontDict 9 dict def
		FontDict begin
			/cache exch def
			/key exch def
			/proc exch cvx def
			/mtx exch matrix invertmatrix def
			/height exch def
			/width exch def
			/ctm matrix currentmatrix def
			/ptm matrix identmatrix def
			/str
			(12345678901234567890123456789012)
			def
		end
		/FontBBox [ %def
			0 0 FontDict /width get
			FontDict /height get
		] def
		/FontMatrix FontDict /mtx get def
		/Encoding StandardEncoding def
		/FontType 3 def
		/BuildChar { %def
			pop begin
			FontDict begin
				width 0 cache { %ifelse
					0 0 width height setcachedevice
				}{ %else
					setcharwidth
				} ifelse
				0 0 moveto width 0 lineto
				width height lineto 0 height lineto
				closepath clip newpath
				gsave proc grestore
			end end
		} def
		FontDict /key get currentdict definefont
	end
} bind def
% dict patternpath -
% dict matrix patternpath -
/patternpath { %def
	dup type /dicttype eq { %ifelse
		begin FontDict /ctm get setmatrix
	}{ %else
		exch begin FontDict /ctm get setmatrix
		concat
	} ifelse
	currentdict setfont
	FontDict begin
		FontMatrix concat
		width 0 dtransform
		round width div exch round width div exch
		0 height dtransform
		round height div exch
		round height div exch
		0 0 transform round exch round exch
		ptm astore setmatrix
		
		pathbbox
		height div ceiling height mul 4 1 roll
		width div ceiling width mul 4 1 roll
		height div floor height mul 4 1 roll
		width div floor width mul 4 1 roll
		
		2 index sub height div ceiling cvi exch
		3 index sub width div ceiling cvi exch
		4 2 roll moveto
		
		FontMatrix ptm invertmatrix pop
		{ %repeat
			gsave
				ptm concat
				dup str length idiv { %repeat
					str show
				} repeat
				dup str length mod str exch
				0 exch getinterval show
			grestore
			0 height rmoveto
		} repeat
		pop
	end end
} bind def

% dict patternfill -
% dict matrix patternfill -
/patternfill { %def
	gsave
		clip patternpath
	grestore
	newpath
} bind def

% dict patterneofill -
% dict matrix patterneofill -
/patterneofill { %def
	gsave
		eoclip patternpath
	grestore
	newpath
} bind def

% dict patternstroke -
% dict matrix patternstroke -
/patternstroke { %def
	gsave
		strokepath clip patternpath
	grestore
	newpath
} bind def

% dict ax ay string patternashow -
% dict matrix ax ay string patternashow -
/patternashow { %def
	(0) exch { %forall
		2 copy 0 exch put pop dup
		false charpath 
		currentpoint
		5 index type /dicttype eq { %ifelse
			5 index patternfill
		}{ %else
			6 index 6 index patternfill
		} ifelse
		moveto
		3 copy pop rmoveto
	} forall
	pop pop pop
	dup type /dicttype ne { pop } if pop
} bind def

% dict string patternshow -
% dict matrix string patternshow -
/patternshow { %def
	0 exch 0 exch patternashow
} bind def

/opaquepatternfill { %def
	gsave
	1 setgray
	fill
	grestore
	patternfill
} bind def

/square { %def
	gsave
		moveto
		dup 0 rlineto
		dup 0 exch rlineto
		neg 0 rlineto
		closepath
		findfont  % a pattern font
		patternfill
	grestore
 } bind def

15 15 [300 72 div 0 0 300 72 div 0 0]
{ %definepattern
	2 setlinecap
	7.5 0 moveto 15 7.5 lineto
	0 7.5 moveto 7.5 15 lineto
	2 setlinewidth stroke
} bind
/RIGHTdiagonal true definepattern pop

15 15 [300 72 div 0 0 300 72 div 0 0]
{ %definepattern
	2 setlinecap
	7.5 0 moveto 0 7.5 lineto
	15 7.5 moveto 7.5 15 lineto
	2 setlinewidth stroke
} bind
/LEFTdiagonal true definepattern pop

30 30 [300 72 div 0 0 300 72 div 0 0]
{ %definepattern
	2 2 scale
	2 setlinecap
	7.5 0 moveto 15 7.5 lineto
	0 7.5 moveto 7.5 15 lineto
	7.5 0 moveto 0 7.5 lineto
	15 7.5 moveto 7.5 15 lineto
	0.5 setlinewidth stroke
} bind
/crosshatch true definepattern pop

% End of Listing 9-1.

% Following fonts added by MJR to flesh out XVT's brushes.

15 15 [300 72 div 0 0 300 72 div 0 0]
{ %definepattern
	2 setlinecap
	0 0 moveto 15 0 lineto
	2 setlinewidth stroke
} bind
/horz true definepattern pop

15 15 [300 72 div 0 0 300 72 div 0 0]
{ %definepattern
	2 setlinecap
	0 0 moveto 0 15 lineto
	2 setlinewidth stroke
} bind
/vert true definepattern pop

15 15 [300 72 div 0 0 300 72 div 0 0]
{ %definepattern
	2 setlinecap
	0 0 moveto 0 15 lineto
	0 0 moveto 15 0 lineto
	2 setlinewidth stroke
} bind
/cross true definepattern pop

% Boolean to control whether stroking is effective -- used for hollow pens.
/do_stroke true def

% Boolean to control whether filling is effective -- used for hollow brushes.
/do_fill true def

% Width of dots
/dotwidth res 50 div def % default is .02 inches

% Width of dashes
/dashwidth res 10 div def % default is .1 inches

% Default XVT colors, stored as RGB arrays
/pen_rgb [0 0 0] def
/brush_rgb [1 1 1] def
/fore_rgb [0 0 0] def
/back_rgb [1 1 1] def

% Fcns to set colors into the graphics state
% Usage: pencolor, brushcolor, forecolor, backcolor
/pencolor {
	pen_rgb aload pop setrgbcolor
} bind def
/brushcolor {
	brush_rgb aload pop setrgbcolor
} bind def
/forecolor {
	fore_rgb aload pop setrgbcolor
} bind def
/backcolor {
	back_rgb aload pop setrgbcolor
} bind def

% Conditional stroke, controlled by do_stroke. Used for all pen drawing.
/cstroke {
	do_stroke { pencolor stroke } { newpath } ifelse
} bind def

% Brush pattern functions -- they redefine /brushfill
%Usage: XXX
%	where XXX is brush_solid, brush_bdiag, etc.
% Call one of these whenever the brush pattern changes.
/brush_hollow {
	/do_fill false def
}
bind def
/brush_solid {
	/do_fill true def
	/brushfill { fill } bind def
}
bind def
/brush_bdiag {
	/do_fill true def
	/brushfill { /LEFTdiagonal findfont patternfill } bind def
}
bind def
/brush_fdiag {
	/do_fill true def
	/brushfill { /RIGHTdiagonal findfont patternfill } bind def
}
bind def
/brush_diagcross {
	/do_fill true def
	/brushfill { /crosshatch findfont patternfill } bind def
}
bind def
/brush_horz {
	/do_fill true def
	/brushfill { /horz findfont patternfill } bind def
}
bind def
/brush_vert {
	/do_fill true def
	/brushfill { /vert findfont patternfill } bind def
}
bind def
/brush_cross {
	/do_fill true def
	/brushfill { /cross findfont patternfill } bind def
}
bind def

% Conditional fill, controlled by do_fill. Used for all brush drawing.
/cfill {
	do_fill
		{ brushcolor brushfill }
		{ newpath }
	ifelse
} bind def

% XVT's move_to
% Usage: x y mv
/mv {
	moveto
} bind def

% XVT's draw_line
% Usage: x y dl
/dl {
	lineto currentpoint cstroke moveto
} bind def

% Fcns for polylines and polygons.
% Usage:	x y b
%			x y l
%			... repeat as needed ...
%			x y dl [for polyline]
%			x y dg [for polygon]
/b {
	moveto
} bind def
/l {
	lineto
} bind def
/dg {
	lineto
	closepath
	gsave cfill grestore cstroke
} bind def

% XVT's draw_rect
% Usage: width height LLx LLy dr
/dr {
	moveto
	1 index 0 rlineto
	0 exch rlineto
	neg 0 rlineto
	closepath
	gsave cfill grestore cstroke
} bind def

% XVT's draw_roundrect
% Usage: width oval_width/2 height oval_height/2 LLx LLy drr
/drr {
	% Can't use gsave/grestore to preserve CTM -- grestore will clobber path
	/savematrix matrix currentmatrix def
	translate
	2 index 1 index scale
	div /h exch def
	div /w exch def
	1 0 moveto
	w 0 w 1 1 arcto 4 { pop } repeat
	w h w 1 sub h 1 arcto 4 { pop } repeat
	0 h 0 h 1 sub 1 arcto 4 { pop } repeat
	0 0 1 0 1 arcto 4 { pop } repeat
	closepath
	savematrix setmatrix
	gsave cfill grestore cstroke
} bind def

% XVT's draw_oval
% Usage: xrad yrad x_center y_center do
/do {
	newpath
	0 360 5 index 5 index 5 index 5 index ellipse pop pop pop pop
	gsave cfill grestore cstroke
} bind def

% Create path for arcs and pies
% Usage: xrad yrad x_center y_center x1 y1 x2 y2 arcpath
/arcpath {
	/y2 exch def
	/x2 exch def
	/y1 exch def
	/x1 exch def
	/y0 exch def
	/x0 exch def
	/yr exch def
	/xr exch def
	y1 y0 sub xr mul x1 x0 sub yr mul atan % leaves start angle on stack
	y2 y0 sub xr mul x2 x0 sub yr mul atan % leaves stop angle on stack
	xr yr x0 y0 ellipse
} bind def

% XVT's draw_arc
% Usage: xrad yrad x_center y_center x1 y1 x2 y2 da
/da {
	newpath
	arcpath
	cstroke
} bind def

% XVT's draw_pie
% Usage: xrad yrad x_center y_center x1 y1 x2 y2 dp
/dp {
	newpath
	5 index 5 index moveto
	arcpath
	closepath
	gsave cfill grestore cstroke
} bind def

% XVT's draw_text
% Usage: string x y dt
% Limitations: ignores backcolor, opaque
/dt {
	moveto forecolor show
} bind def

% Fcn for picture_draw and draw_icon
% Usage:	rowbits scanlines width height x y  bm
%			... image data in hex follows ...
% Image data should be in groups, where each group is (rowbits / 8) bytes,
% rounded up to the next higher byte. There should be as many groups as
% scanlines. A value of 1 for a bit is white; 0 is black.
/bm {
	gsave
	translate
	scale
	/scanlines exch def
	/rowbits exch def
	/DataString rowbits 8 div ceiling cvi string def
	rowbits scanlines 1 [ rowbits 0 0 scanlines neg 0 scanlines ]
	{ currentfile DataString readhexstring pop }
	bind image
	grestore
} bind def

% Fcn to set pen width
% Usage: penwidth pw
/pw {
	setlinewidth
} bind def

% Fcn to set pen style and pattern
% Usage: style pat psp
%	where style is 1 for solid, 2 for dot, 3 for dash
%	where pat is 0 for hollow, 1 for solid, 2 for rubber
/psp {
	dup
	/do_stroke exch 0 ne def % takes care of hollow case
	2 eq
		{ [dashwidth] }
		{
			dup
			2 eq
			{ pop [dotwidth] }
			{ 3 eq { [dashwidth] } {[]} ifelse }
			ifelse
		}
	ifelse
	0 setdash
} bind def

% Fcn to set font
% Usage pointsize fontname f
/f {
%	findfont exch res mul 72 div [ exch 0 0 2 index neg 0 0 ] makefont setfont
	findfont exch res mul 72 div scalefont setfont
} bind def

% XVT's set_clip
% Usage: width height LLx LLy sc
/sc {
	moveto
	1 index 0 rlineto
	0 exch rlineto
	neg 0 rlineto
	closepath
	clip newpath
} bind def

% End of XVT PostScript Driver Prolog
% ProtoSoft: start
/gs  /gsave load def
/gr  /grestore load def
% ProtoSoft: end

end %PROLOGUE
%%EndProlog
PROLOGUE begin
1 pw
1 1 psp
/pen_rgb [0 0 0] def
brush_solid
/brush_rgb [1 1 1] def
/fore_rgb [0 0 0] def
/back_rgb [1 1 1] def
12 /Helvetica f
/fore_rgb [0 0 0] def
/back_rgb [1 1 1] def
%%Page: 1 1
72 res div dup scale
2550 3300 0 0 sc
gsave
727 2147 926 290 dr
brush_solid
/brush_rgb [0 0 0] def
1653 2428 b
1663 2428 l
1663 281 l
936 281 l
936 290 l
1653 290 l
1653 2428 dg
grestore gsave
737 2156 926 281 sc
/fore_rgb [0 0 0] def
/back_rgb [1 1 1] def
18 /Helvetica-Bold f
/fore_rgb [0 0 0] def
grestore gsave
2550 3300 0 0 sc
/fore_rgb [0 0 0] def
/back_rgb [1 1 1] def
18 /Helvetica-Bold f
/fore_rgb [0 0 0] def
/back_rgb [1 1 1] def
18 /Helvetica-Bold f
(Excal) 1197 197 dt
brush_solid
/brush_rgb [1 1 1] def
478 2128 80 309 dr
brush_solid
/brush_rgb [0 0 0] def
558 2428 b
568 2428 l
568 300 l
90 300 l
90 309 l
558 309 l
558 2428 dg
grestore gsave
488 2137 80 300 sc
/fore_rgb [0 0 0] def
/back_rgb [1 1 1] def
18 /Helvetica-Bold f
/fore_rgb [0 0 0] def
grestore gsave
2550 3300 0 0 sc
/fore_rgb [0 0 0] def
/back_rgb [1 1 1] def
18 /Helvetica-Bold f
/fore_rgb [0 0 0] def
/back_rgb [1 1 1] def
18 /Helvetica-Bold f
(Primaries) 153 216 dt
brush_solid
/brush_rgb [1 1 1] def
293 436 159 811 dr
grestore gsave
293 436 159 811 sc
/fore_rgb [0 0 0] def
/back_rgb [1 1 1] def
10 /Helvetica-Bold f
/fore_rgb [0 0 0] def
159 1088 mv
452 1088 dl
(id) 193 1049 dt
(flavor) 193 1000 dt
(coord) 193 952 dt
(mag[filter]) 193 903 dt
(active) 193 854 dt
grestore gsave
2550 3300 0 0 sc
/fore_rgb [0 0 0] def
/back_rgb [1 1 1] def
10 /Helvetica-Bold f
/fore_rgb [0 0 0] def
/back_rgb [1 1 1] def
10 /Helvetica-Bold f
(Primary ) 223 1187 dt
(Star) 266 1147 dt
246 240 269 1522 dr
grestore gsave
246 240 269 1522 sc
/fore_rgb [0 0 0] def
/back_rgb [1 1 1] def
10 /Helvetica-Bold f
/fore_rgb [0 0 0] def
269 1604 mv
515 1604 dl
(coord) 303 1565 dt
grestore gsave
2550 3300 0 0 sc
/fore_rgb [0 0 0] def
/back_rgb [1 1 1] def
10 /Helvetica-Bold f
/fore_rgb [0 0 0] def
/back_rgb [1 1 1] def
10 /Helvetica-Bold f
(Primary ) 309 1702 dt
(Field) 344 1663 dt
250 241 179 2075 dr
grestore gsave
250 241 179 2075 sc
/fore_rgb [0 0 0] def
/back_rgb [1 1 1] def
10 /Helvetica-Bold f
/fore_rgb [0 0 0] def
179 2157 mv
429 2157 dl
(versions) 213 2118 dt
grestore gsave
2550 3300 0 0 sc
/fore_rgb [0 0 0] def
/back_rgb [1 1 1] def
10 /Helvetica-Bold f
/fore_rgb [0 0 0] def
/back_rgb [1 1 1] def
10 /Helvetica-Bold f
(Primary ) 221 2256 dt
(Set) 272 2216 dt
1 pw
1 0 psp
/pen_rgb [0 0 0] def
brush_solid
/brush_rgb[0.753 0.753 0.753] def
274 138 612 1124 dr
1 pw
1 1 psp
/pen_rgb [0 0 0] def
brush_solid
/brush_rgb [1 1 1] def
242 108 628 1139 dr
grestore gsave
242 108 628 1139 sc
/fore_rgb [0 0 0] def
/back_rgb [1 1 1] def
10 /Helvetica-Bold f
/fore_rgb [0 0 0] def
grestore gsave
2550 3300 0 0 sc
/fore_rgb [0 0 0] def
/back_rgb [1 1 1] def
10 /Helvetica-Bold f
/fore_rgb [0 0 0] def
/back_rgb [1 1 1] def
10 /Helvetica-Bold f
(MT Star) 672 1187 dt
1 pw
1 0 psp
/pen_rgb [0 0 0] def
brush_solid
/brush_rgb[0.753 0.753 0.753] def
271 138 1538 2605 dr
1 pw
1 1 psp
/pen_rgb [0 0 0] def
brush_solid
/brush_rgb [1 1 1] def
239 108 1554 2620 dr
grestore gsave
239 108 1554 2620 sc
/fore_rgb [0 0 0] def
/back_rgb [1 1 1] def
10 /Helvetica-Bold f
/fore_rgb [0 0 0] def
grestore gsave
2550 3300 0 0 sc
/fore_rgb [0 0 0] def
/back_rgb [1 1 1] def
10 /Helvetica-Bold f
/fore_rgb [0 0 0] def
/back_rgb [1 1 1] def
10 /Helvetica-Bold f
(Product) 1595 2668 dt
416 389 1107 1927 dr
grestore gsave
416 389 1107 1927 sc
/fore_rgb [0 0 0] def
/back_rgb [1 1 1] def
10 /Helvetica-Bold f
/fore_rgb [0 0 0] def
1107 2205 mv
1523 2205 dl
(id) 1141 2166 dt
(priSolve) 1141 2117 dt
(sign[filter]) 1141 2068 dt
(colorFilter[filter]) 1141 2019 dt
(stdsVersion) 1141 1971 dt
grestore gsave
2550 3300 0 0 sc
/fore_rgb [0 0 0] def
/back_rgb [1 1 1] def
10 /Helvetica-Bold f
/fore_rgb [0 0 0] def
/back_rgb [1 1 1] def
10 /Helvetica-Bold f
(Excal Run) 1214 2256 dt
1107 2091 mv
867 2091 dl
brush_solid
/brush_rgb [0 0 0] def
16 15 1097 2091 do
brush_solid
/brush_rgb [1 1 1] def
276 777 1325 470 dr
grestore gsave
276 777 1325 470 sc
/fore_rgb [0 0 0] def
/back_rgb [1 1 1] def
10 /Helvetica-Bold f
/fore_rgb [0 0 0] def
1325 1088 mv
1601 1088 dl
(filter) 1359 1049 dt
(a) 1359 1000 dt
(b) 1359 952 dt
(c) 1359 903 dt
(k) 1359 854 dt
(aa) 1359 805 dt
(bb) 1359 757 dt
(cc) 1359 708 dt
(kk) 1359 659 dt
(nStars) 1359 610 dt
(chisq) 1359 562 dt
(rms) 1359 513 dt
grestore gsave
2550 3300 0 0 sc
/fore_rgb [0 0 0] def
/back_rgb [1 1 1] def
10 /Helvetica-Bold f
/fore_rgb [0 0 0] def
/back_rgb [1 1 1] def
10 /Helvetica-Bold f
(MT Filter ) 1370 1187 dt
(Solution) 1379 1147 dt
1315 1927 mv
1315 1791 dl
brush_solid
/brush_rgb [0 0 0] def
brush_solid
/brush_rgb [1 1 1] def
1295 1899 b
1315 1927 l
1335 1899 l
1315 1862 l
1295 1899 dg
brush_solid
/brush_rgb [0 0 0] def
1335 1809 b
1295 1809 dl
1333 2316 mv
1333 2536 dl
1673 2536 dl
1673 2536 mv
1673 2536 dl
1673 2620 dl
brush_solid
/brush_rgb [1 1 1] def
1624 2536 b
1673 2573 l
1723 2536 l
1624 2536 dg
1 pw
1 0 psp
/pen_rgb [0 0 0] def
brush_solid
/brush_rgb[0.753 0.753 0.753] def
271 235 612 1974 dr
1 pw
1 1 psp
/pen_rgb [0 0 0] def
brush_solid
/brush_rgb [1 1 1] def
239 205 628 1989 dr
grestore gsave
239 205 628 1989 sc
/fore_rgb [0 0 0] def
/back_rgb [1 1 1] def
10 /Helvetica-Bold f
/fore_rgb [0 0 0] def
grestore gsave
2550 3300 0 0 sc
/fore_rgb [0 0 0] def
/back_rgb [1 1 1] def
10 /Helvetica-Bold f
/fore_rgb [0 0 0] def
/back_rgb [1 1 1] def
10 /Helvetica-Bold f
(MT ) 711 2134 dt
(Frames ) 667 2094 dt
(Run) 706 2055 dt
327 389 1155 1402 dr
grestore gsave
327 389 1155 1402 sc
/fore_rgb [0 0 0] def
/back_rgb [1 1 1] def
10 /Helvetica-Bold f
/fore_rgb [0 0 0] def
1155 1680 mv
1482 1680 dl
(blockId) 1189 1641 dt
(startMJD) 1189 1592 dt
(midMJD) 1189 1543 dt
(endMJD) 1189 1494 dt
(photometric) 1189 1446 dt
grestore gsave
2550 3300 0 0 sc
/fore_rgb [0 0 0] def
/back_rgb [1 1 1] def
10 /Helvetica-Bold f
/fore_rgb [0 0 0] def
/back_rgb [1 1 1] def
10 /Helvetica-Bold f
(MT Solution) 1200 1731 dt
1319 1402 mv
1319 1318 dl
1319 1318 dl
1319 1318 mv
1462 1318 dl
1462 1247 dl
brush_solid
/brush_rgb [0 0 0] def
brush_solid
/brush_rgb [1 1 1] def
1299 1374 b
1319 1402 l
1339 1374 l
1319 1337 l
1299 1374 dg
brush_solid
/brush_rgb [0 0 0] def
1482 1266 b
1442 1266 dl
/fore_rgb [0 0 0] def
/back_rgb [1 1 1] def
10 /Helvetica-Bold f
({5}) 1363 1277 dt
brush_solid
/brush_rgb [1 1 1] def
293 241 966 1006 dr
grestore gsave
293 241 966 1006 sc
/fore_rgb [0 0 0] def
/back_rgb [1 1 1] def
10 /Helvetica-Bold f
/fore_rgb [0 0 0] def
966 1088 mv
1259 1088 dl
(mag[filter]) 1000 1049 dt
grestore gsave
2550 3300 0 0 sc
/fore_rgb [0 0 0] def
/back_rgb [1 1 1] def
10 /Helvetica-Bold f
/fore_rgb [0 0 0] def
/back_rgb [1 1 1] def
10 /Helvetica-Bold f
(Matched ) 1023 1187 dt
(Primary) 1035 1147 dt
966 1199 mv
870 1199 dl
brush_solid
/brush_rgb [0 0 0] def
16 15 956 1199 do
303 2075 mv
303 1990 dl
303 1990 dl
303 1990 mv
387 1990 dl
387 1762 dl
brush_solid
/brush_rgb [1 1 1] def
283 2047 b
303 2075 l
323 2047 l
303 2009 l
283 2047 dg
brush_solid
/brush_rgb [0 0 0] def
407 1781 b
368 1781 dl
303 2075 mv
303 1990 dl
303 1990 dl
209 1247 mv
209 1990 dl
303 1990 dl
brush_solid
/brush_rgb [1 1 1] def
283 2047 b
303 2075 l
323 2047 l
303 2009 l
283 2047 dg
brush_solid
/brush_rgb [0 0 0] def
229 1266 b
189 1266 dl
966 1078 mv
452 1078 dl
16 15 956 1078 do
1107 2233 mv
429 2233 dl
16 15 1097 2233 do
brush_solid
/brush_rgb [1 1 1] def
418 2147 2052 290 dr
brush_solid
/brush_rgb [0 0 0] def
2470 2428 b
2480 2428 l
2480 281 l
2062 281 l
2062 290 l
2470 290 l
2470 2428 dg
grestore gsave
428 2156 2052 281 sc
/fore_rgb [0 0 0] def
/back_rgb [1 1 1] def
18 /Helvetica-Bold f
/fore_rgb [0 0 0] def
grestore gsave
2550 3300 0 0 sc
/fore_rgb [0 0 0] def
/back_rgb [1 1 1] def
18 /Helvetica-Bold f
/fore_rgb [0 0 0] def
/back_rgb [1 1 1] def
18 /Helvetica-Bold f
(Kali) 2197 197 dt
1 pw
1 0 psp
/pen_rgb [0 0 0] def
brush_solid
/brush_rgb[0.753 0.753 0.753] def
287 138 1727 1527 dr
1 pw
1 1 psp
/pen_rgb [0 0 0] def
brush_solid
/brush_rgb [1 1 1] def
255 108 1743 1542 dr
grestore gsave
255 108 1743 1542 sc
/fore_rgb [0 0 0] def
/back_rgb [1 1 1] def
10 /Helvetica-Bold f
/fore_rgb [0 0 0] def
grestore gsave
2550 3300 0 0 sc
/fore_rgb [0 0 0] def
/back_rgb [1 1 1] def
10 /Helvetica-Bold f
/fore_rgb [0 0 0] def
/back_rgb [1 1 1] def
10 /Helvetica-Bold f
(MT Field) 1786 1590 dt
301 289 2132 1473 dr
grestore gsave
301 289 2132 1473 sc
/fore_rgb [0 0 0] def
/back_rgb [1 1 1] def
10 /Helvetica-Bold f
/fore_rgb [0 0 0] def
2132 1604 mv
2433 1604 dl
(quality) 2166 1565 dt
(coord) 2166 1516 dt
grestore gsave
2550 3300 0 0 sc
/fore_rgb [0 0 0] def
/back_rgb [1 1 1] def
10 /Helvetica-Bold f
/fore_rgb [0 0 0] def
/back_rgb [1 1 1] def
10 /Helvetica-Bold f
(Secondary ) 2170 1702 dt
(Field) 2234 1663 dt
2132 1597 mv
1998 1597 dl
brush_solid
/brush_rgb [0 0 0] def
16 15 2122 1597 do
brush_solid
/brush_rgb [1 1 1] def
301 387 2132 850 dr
grestore gsave
301 387 2132 850 sc
/fore_rgb [0 0 0] def
/back_rgb [1 1 1] def
10 /Helvetica-Bold f
/fore_rgb [0 0 0] def
2132 1079 mv
2433 1079 dl
(id) 2166 1040 dt
(ra) 2166 991 dt
(dec) 2166 942 dt
(mag[filter]) 2166 893 dt
grestore gsave
2550 3300 0 0 sc
/fore_rgb [0 0 0] def
/back_rgb [1 1 1] def
10 /Helvetica-Bold f
/fore_rgb [0 0 0] def
/back_rgb [1 1 1] def
10 /Helvetica-Bold f
(Secondary ) 2170 1177 dt
(Star) 2242 1138 dt
2274 1473 mv
2274 1237 dl
brush_solid
/brush_rgb [0 0 0] def
brush_solid
/brush_rgb [1 1 1] def
2254 1445 b
2274 1473 l
2294 1445 l
2274 1407 l
2254 1445 dg
brush_solid
/brush_rgb [0 0 0] def
16 15 2274 1247 do
brush_solid
/brush_rgb [1 1 1] def
242 194 2181 2122 dr
grestore gsave
242 194 2181 2122 sc
/fore_rgb [0 0 0] def
/back_rgb [1 1 1] def
10 /Helvetica-Bold f
/fore_rgb [0 0 0] def
2181 2205 mv
2423 2205 dl
(id) 2215 2166 dt
grestore gsave
2550 3300 0 0 sc
/fore_rgb [0 0 0] def
/back_rgb [1 1 1] def
10 /Helvetica-Bold f
/fore_rgb [0 0 0] def
/back_rgb [1 1 1] def
10 /Helvetica-Bold f
(Kali Run) 2217 2256 dt
2271 2122 mv
2271 1762 dl
brush_solid
/brush_rgb [0 0 0] def
brush_solid
/brush_rgb [1 1 1] def
2251 2094 b
2271 2122 l
2291 2094 l
2271 2057 l
2251 2094 dg
brush_solid
/brush_rgb [0 0 0] def
16 15 2271 1772 do
2181 2250 mv
1523 2250 dl
16 15 2171 2250 do
1673 2536 mv
2291 2536 dl
2291 2316 dl
1673 2536 mv
1673 2536 dl
1673 2620 dl
brush_solid
/brush_rgb [1 1 1] def
1624 2536 b
1673 2573 l
1723 2536 l
1624 2536 dg
/fore_rgb [0 0 0] def
/fore_rgb [0 0 0] def
/back_rgb [1 1 1] def
24 /Helvetica-Bold f
/fore_rgb [0 0 0] def
/back_rgb [1 1 1] def
24 /Helvetica-Bold f
(MT Calibrations) 853 2897 dt
/fore_rgb [0 0 0] def
/back_rgb [1 1 1] def
10 /Helvetica-Bold f
1 pw
1 0 psp
/pen_rgb [0 0 0] def
brush_solid
/brush_rgb[0.753 0.753 0.753] def
271 271 612 1666 dr
1 pw
1 1 psp
/pen_rgb [0 0 0] def
brush_solid
/brush_rgb [1 1 1] def
239 241 628 1681 dr
grestore gsave
239 241 628 1681 sc
/fore_rgb [0 0 0] def
/back_rgb [1 1 1] def
10 /Helvetica-Bold f
/fore_rgb [0 0 0] def
628 1763 mv
867 1763 dl
(id) 661 1724 dt
grestore gsave
2550 3300 0 0 sc
/fore_rgb [0 0 0] def
/back_rgb [1 1 1] def
10 /Helvetica-Bold f
/fore_rgb [0 0 0] def
/back_rgb [1 1 1] def
10 /Helvetica-Bold f
(MT ) 712 1862 dt
(Target) 684 1822 dt
515 1556 mv
747 1556 dl
747 1681 dl
brush_solid
/brush_rgb [0 0 0] def
brush_solid
/brush_rgb [1 1 1] def
697 1597 b
747 1634 l
797 1597 l
697 1597 dg
1319 1402 mv
1319 1318 dl
1319 1318 dl
1117 1247 mv
1117 1318 dl
1319 1318 dl
brush_solid
/brush_rgb [0 0 0] def
brush_solid
/brush_rgb [1 1 1] def
1299 1374 b
1319 1402 l
1339 1374 l
1319 1337 l
1299 1374 dg
brush_solid
/brush_rgb [0 0 0] def
1137 1266 b
1097 1266 dl
388 1522 mv
388 1247 dl
369 1503 b
408 1503 dl
408 1266 b
369 1266 dl
grestore gsave
brush_solid
/brush_rgb [1 1 1] def
/fore_rgb [0 0 0] def
/back_rgb [1 1 1] def
12 /Helvetica-BoldOblique f
() 0 3254 dt
() 1275 3254 dt
() 2550 3254 dt
/fore_rgb [0 0 0] def
/back_rgb [1 1 1] def
10 /Helvetica f
(Tue Aug 18 1998 5:06:07 ) 0 58 dt
() 1275 58 dt
() 2550 58 dt
showpage
%%PageTrailer
% End of page 1
%%Trailer
%%DocumentFonts:
%%+ Times-Roman
%%+ Helvetica-Bold
%%+ Helvetica
%%+ Helvetica-BoldOblique
%%Pages: 1
end %%PROLOGUE
%% End of PostScript file
%%EOF