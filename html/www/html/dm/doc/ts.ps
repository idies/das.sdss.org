%!PS-Adobe-2.0
%%Title: Target Selection
%%Creator: XVT PostScript Print Driver (mods by Mike Cowley)
%%CreationDate: Mon May  5 16:29:49 1997
%%BoundingBox: 0 0 2550 3300
%%Orientation: Portrait
%%Pages: (atend)
%%EndComments
/PROLOGUE 100 dict def
PROLOGUE begin
/res 300 def
% XVT PostScript Driver Prolog
% Copyright 1990 XVT Software Inc. All rights reserved. May be distributed
% and used only by applications written with an XVT toolkit supplied by
% XVT Software Inc.
%
% Problems:
% Text:
%	- opaque_text not honored; always FALSE (therefore, back_color ignored)
% Brushes:
%	- back_color not honored; always white
% Not done yet:
%	- draw_aline [l^ fcn is here]

% --------- Prolog ------------------

% Following based on Program 3 in the Blue Book
%(PostScript Lanuage: Tutorial and Cookbook)
% Usage: startangle endangle xrad yrad x_center y_center ellipse

/ellipse {
	/savematrix matrix currentmatrix def
	translate
	scale
	0 0 1 4 index 4 index arc pop pop
	savematrix setmatrix
} bind def

% End of Program 3.

% Following taken from Listing 3-4 in Greek Book
% (PostScript Language: Program Design), except for inclusion of "mul"
% and arrowheadscale arg in l^
% Also, coordinates adjusted to put tip of arrow nearer to current point

% "arrowhead" takes these arguments:
% lineweight prevX prevY
 /arrowhead { %def
	gsave
		currentpoint
		4 2 roll exch 4 -1 roll exch
		sub 3 1 roll sub
		exch atan rotate dup dup 0 rmoveto scale
%		-1 2 rlineto
%		7 -2 rlineto
%		-7 -2 rlineto
		-7 2 rlineto
		1 -2 rlineto
		-1 -2 rlineto
		closepath fill
	grestore
	newpath
 } bind def
 % x y arrowheadscale l^
 /l^ { %def    % lineto-arrow
	currentlinewidth mul currentpoint 5 3 roll
	lineto
	currentpoint stroke moveto
	arrowhead
 } bind def

% End of Listing 3-4 extract.

% Following comes from Listing 9-1 of the Green Book
% (PostScript Language: Program Design). Changes are marked with "MJR".

% width height matrix proc key cache
% definepattern -\> font
/definepattern { %def
	7 dict begin
		/FontDict 9 dict def
		FontDict begin
			/cache exch def
			/key exch def
			/proc exch cvx def
			/mtx exch matrix invertmatrix def
			/height exch def
			/width exch def
			/ctm matrix currentmatrix def
			/ptm matrix identmatrix def
			/str
			(12345678901234567890123456789012)
			def
		end
		/FontBBox [ %def
			0 0 FontDict /width get
			FontDict /height get
		] def
		/FontMatrix FontDict /mtx get def
		/Encoding StandardEncoding def
		/FontType 3 def
		/BuildChar { %def
			pop begin
			FontDict begin
				width 0 cache { %ifelse
					0 0 width height setcachedevice
				}{ %else
					setcharwidth
				} ifelse
				0 0 moveto width 0 lineto
				width height lineto 0 height lineto
				closepath clip newpath
				gsave proc grestore
			end end
		} def
		FontDict /key get currentdict definefont
	end
} bind def
% dict patternpath -
% dict matrix patternpath -
/patternpath { %def
	dup type /dicttype eq { %ifelse
		begin FontDict /ctm get setmatrix
	}{ %else
		exch begin FontDict /ctm get setmatrix
		concat
	} ifelse
	currentdict setfont
	FontDict begin
		FontMatrix concat
		width 0 dtransform
		round width div exch round width div exch
		0 height dtransform
		round height div exch
		round height div exch
		0 0 transform round exch round exch
		ptm astore setmatrix
		
		pathbbox
		height div ceiling height mul 4 1 roll
		width div ceiling width mul 4 1 roll
		height div floor height mul 4 1 roll
		width div floor width mul 4 1 roll
		
		2 index sub height div ceiling cvi exch
		3 index sub width div ceiling cvi exch
		4 2 roll moveto
		
		FontMatrix ptm invertmatrix pop
		{ %repeat
			gsave
				ptm concat
				dup str length idiv { %repeat
					str show
				} repeat
				dup str length mod str exch
				0 exch getinterval show
			grestore
			0 height rmoveto
		} repeat
		pop
	end end
} bind def

% dict patternfill -
% dict matrix patternfill -
/patternfill { %def
	gsave
		clip patternpath
	grestore
	newpath
} bind def

% dict patterneofill -
% dict matrix patterneofill -
/patterneofill { %def
	gsave
		eoclip patternpath
	grestore
	newpath
} bind def

% dict patternstroke -
% dict matrix patternstroke -
/patternstroke { %def
	gsave
		strokepath clip patternpath
	grestore
	newpath
} bind def

% dict ax ay string patternashow -
% dict matrix ax ay string patternashow -
/patternashow { %def
	(0) exch { %forall
		2 copy 0 exch put pop dup
		false charpath 
		currentpoint
		5 index type /dicttype eq { %ifelse
			5 index patternfill
		}{ %else
			6 index 6 index patternfill
		} ifelse
		moveto
		3 copy pop rmoveto
	} forall
	pop pop pop
	dup type /dicttype ne { pop } if pop
} bind def

% dict string patternshow -
% dict matrix string patternshow -
/patternshow { %def
	0 exch 0 exch patternashow
} bind def

/opaquepatternfill { %def
	gsave
	1 setgray
	fill
	grestore
	patternfill
} bind def

/square { %def
	gsave
		moveto
		dup 0 rlineto
		dup 0 exch rlineto
		neg 0 rlineto
		closepath
		findfont  % a pattern font
		patternfill
	grestore
 } bind def

15 15 [300 72 div 0 0 300 72 div 0 0]
{ %definepattern
	2 setlinecap
	7.5 0 moveto 15 7.5 lineto
	0 7.5 moveto 7.5 15 lineto
	2 setlinewidth stroke
} bind
/RIGHTdiagonal true definepattern pop

15 15 [300 72 div 0 0 300 72 div 0 0]
{ %definepattern
	2 setlinecap
	7.5 0 moveto 0 7.5 lineto
	15 7.5 moveto 7.5 15 lineto
	2 setlinewidth stroke
} bind
/LEFTdiagonal true definepattern pop

30 30 [300 72 div 0 0 300 72 div 0 0]
{ %definepattern
	2 2 scale
	2 setlinecap
	7.5 0 moveto 15 7.5 lineto
	0 7.5 moveto 7.5 15 lineto
	7.5 0 moveto 0 7.5 lineto
	15 7.5 moveto 7.5 15 lineto
	0.5 setlinewidth stroke
} bind
/crosshatch true definepattern pop

% End of Listing 9-1.

% Following fonts added by MJR to flesh out XVT's brushes.

15 15 [300 72 div 0 0 300 72 div 0 0]
{ %definepattern
	2 setlinecap
	0 0 moveto 15 0 lineto
	2 setlinewidth stroke
} bind
/horz true definepattern pop

15 15 [300 72 div 0 0 300 72 div 0 0]
{ %definepattern
	2 setlinecap
	0 0 moveto 0 15 lineto
	2 setlinewidth stroke
} bind
/vert true definepattern pop

15 15 [300 72 div 0 0 300 72 div 0 0]
{ %definepattern
	2 setlinecap
	0 0 moveto 0 15 lineto
	0 0 moveto 15 0 lineto
	2 setlinewidth stroke
} bind
/cross true definepattern pop

% Boolean to control whether stroking is effective -- used for hollow pens.
/do_stroke true def

% Boolean to control whether filling is effective -- used for hollow brushes.
/do_fill true def

% Width of dots
/dotwidth res 50 div def % default is .02 inches

% Width of dashes
/dashwidth res 10 div def % default is .1 inches

% Default XVT colors, stored as RGB arrays
/pen_rgb [0 0 0] def
/brush_rgb [1 1 1] def
/fore_rgb [0 0 0] def
/back_rgb [1 1 1] def

% Fcns to set colors into the graphics state
% Usage: pencolor, brushcolor, forecolor, backcolor
/pencolor {
	pen_rgb aload pop setrgbcolor
} bind def
/brushcolor {
	brush_rgb aload pop setrgbcolor
} bind def
/forecolor {
	fore_rgb aload pop setrgbcolor
} bind def
/backcolor {
	back_rgb aload pop setrgbcolor
} bind def

% Conditional stroke, controlled by do_stroke. Used for all pen drawing.
/cstroke {
	do_stroke { pencolor stroke } { newpath } ifelse
} bind def

% Brush pattern functions -- they redefine /brushfill
%Usage: XXX
%	where XXX is brush_solid, brush_bdiag, etc.
% Call one of these whenever the brush pattern changes.
/brush_hollow {
	/do_fill false def
}
bind def
/brush_solid {
	/do_fill true def
	/brushfill { fill } bind def
}
bind def
/brush_bdiag {
	/do_fill true def
	/brushfill { /LEFTdiagonal findfont patternfill } bind def
}
bind def
/brush_fdiag {
	/do_fill true def
	/brushfill { /RIGHTdiagonal findfont patternfill } bind def
}
bind def
/brush_diagcross {
	/do_fill true def
	/brushfill { /crosshatch findfont patternfill } bind def
}
bind def
/brush_horz {
	/do_fill true def
	/brushfill { /horz findfont patternfill } bind def
}
bind def
/brush_vert {
	/do_fill true def
	/brushfill { /vert findfont patternfill } bind def
}
bind def
/brush_cross {
	/do_fill true def
	/brushfill { /cross findfont patternfill } bind def
}
bind def

% Conditional fill, controlled by do_fill. Used for all brush drawing.
/cfill {
	do_fill
		{ brushcolor brushfill }
		{ newpath }
	ifelse
} bind def

% XVT's move_to
% Usage: x y mv
/mv {
	moveto
} bind def

% XVT's draw_line
% Usage: x y dl
/dl {
	lineto currentpoint cstroke moveto
} bind def

% Fcns for polylines and polygons.
% Usage:	x y b
%			x y l
%			... repeat as needed ...
%			x y dl [for polyline]
%			x y dg [for polygon]
/b {
	moveto
} bind def
/l {
	lineto
} bind def
/dg {
	lineto
	closepath
	gsave cfill grestore cstroke
} bind def

% XVT's draw_rect
% Usage: width height LLx LLy dr
/dr {
	moveto
	1 index 0 rlineto
	0 exch rlineto
	neg 0 rlineto
	closepath
	gsave cfill grestore cstroke
} bind def

% XVT's draw_roundrect
% Usage: width oval_width/2 height oval_height/2 LLx LLy drr
/drr {
	% Can't use gsave/grestore to preserve CTM -- grestore will clobber path
	/savematrix matrix currentmatrix def
	translate
	2 index 1 index scale
	div /h exch def
	div /w exch def
	1 0 moveto
	w 0 w 1 1 arcto 4 { pop } repeat
	w h w 1 sub h 1 arcto 4 { pop } repeat
	0 h 0 h 1 sub 1 arcto 4 { pop } repeat
	0 0 1 0 1 arcto 4 { pop } repeat
	closepath
	savematrix setmatrix
	gsave cfill grestore cstroke
} bind def

% XVT's draw_oval
% Usage: xrad yrad x_center y_center do
/do {
	newpath
	0 360 5 index 5 index 5 index 5 index ellipse pop pop pop pop
	gsave cfill grestore cstroke
} bind def

% Create path for arcs and pies
% Usage: xrad yrad x_center y_center x1 y1 x2 y2 arcpath
/arcpath {
	/y2 exch def
	/x2 exch def
	/y1 exch def
	/x1 exch def
	/y0 exch def
	/x0 exch def
	/yr exch def
	/xr exch def
	y1 y0 sub xr mul x1 x0 sub yr mul atan % leaves start angle on stack
	y2 y0 sub xr mul x2 x0 sub yr mul atan % leaves stop angle on stack
	xr yr x0 y0 ellipse
} bind def

% XVT's draw_arc
% Usage: xrad yrad x_center y_center x1 y1 x2 y2 da
/da {
	newpath
	arcpath
	cstroke
} bind def

% XVT's draw_pie
% Usage: xrad yrad x_center y_center x1 y1 x2 y2 dp
/dp {
	newpath
	5 index 5 index moveto
	arcpath
	closepath
	gsave cfill grestore cstroke
} bind def

% XVT's draw_text
% Usage: string x y dt
% Limitations: ignores backcolor, opaque
/dt {
	moveto forecolor show
} bind def

% Fcn for picture_draw and draw_icon
% Usage:	rowbits scanlines width height x y  bm
%			... image data in hex follows ...
% Image data should be in groups, where each group is (rowbits / 8) bytes,
% rounded up to the next higher byte. There should be as many groups as
% scanlines. A value of 1 for a bit is white; 0 is black.
/bm {
	gsave
	translate
	scale
	/scanlines exch def
	/rowbits exch def
	/DataString rowbits 8 div ceiling cvi string def
	rowbits scanlines 1 [ rowbits 0 0 scanlines neg 0 scanlines ]
	{ currentfile DataString readhexstring pop }
	bind image
	grestore
} bind def

% Fcn to set pen width
% Usage: penwidth pw
/pw {
	setlinewidth
} bind def

% Fcn to set pen style and pattern
% Usage: style pat psp
%	where style is 1 for solid, 2 for dot, 3 for dash
%	where pat is 0 for hollow, 1 for solid, 2 for rubber
/psp {
	dup
	/do_stroke exch 0 ne def % takes care of hollow case
	2 eq
		{ [dashwidth] }
		{
			dup
			2 eq
			{ pop [dotwidth] }
			{ 3 eq { [dashwidth] } {[]} ifelse }
			ifelse
		}
	ifelse
	0 setdash
} bind def

% Fcn to set font
% Usage pointsize fontname f
/f {
%	findfont exch res mul 72 div [ exch 0 0 2 index neg 0 0 ] makefont setfont
	findfont exch res mul 72 div scalefont setfont
} bind def

% XVT's set_clip
% Usage: width height LLx LLy sc
/sc {
	moveto
	1 index 0 rlineto
	0 exch rlineto
	neg 0 rlineto
	closepath
	clip newpath
} bind def

% End of XVT PostScript Driver Prolog
% ProtoSoft: start
/gs  /gsave load def
/gr  /grestore load def
% ProtoSoft: end

end %PROLOGUE
%%EndProlog
PROLOGUE begin
1 pw
1 1 psp
/pen_rgb [0 0 0] def
brush_solid
/brush_rgb [1 1 1] def
/fore_rgb [0 0 0] def
/back_rgb [1 1 1] def
12 /Helvetica f
/fore_rgb [0 0 0] def
/back_rgb [1 1 1] def
%%Page: 1 1
72 res div dup scale
2550 3300 0 0 sc
gsave
1 pw
1 1 psp
/pen_rgb [0 0 0] def
1952 2129 478 646 dr
brush_solid
/brush_rgb [0 0 0] def
2430 2766 b
2440 2766 l
2440 637 l
488 637 l
488 646 l
2430 646 l
2430 2766 dg
grestore gsave
1962 2138 478 637 sc
/fore_rgb [0 0 0] def
/back_rgb [1 1 1] def
18 /Helvetica-Bold f
/fore_rgb [0 0 0] def
grestore gsave
2550 3300 0 0 sc
/fore_rgb [0 0 0] def
/back_rgb [1 1 1] def
18 /Helvetica-Bold f
/fore_rgb [0 0 0] def
/back_rgb [1 1 1] def
18 /Helvetica-Bold f
(Target Selection) 1168 553 dt
1 pw
1 0 psp
/pen_rgb [0 0 0] def
brush_solid
/brush_rgb[0.753 0.753 0.753] def
281 827 1448 1635 dr
1 pw
1 1 psp
/pen_rgb [0 0 0] def
brush_solid
/brush_rgb [1 1 1] def
249 797 1464 1650 dr
grestore gsave
249 797 1464 1650 sc
/fore_rgb [0 0 0] def
/back_rgb [1 1 1] def
10 /Helvetica-Bold f
/fore_rgb [0 0 0] def
grestore gsave
2550 3300 0 0 sc
/fore_rgb [0 0 0] def
/back_rgb [1 1 1] def
10 /Helvetica-Bold f
/fore_rgb [0 0 0] def
/back_rgb [1 1 1] def
10 /Helvetica-Bold f
(Frames ) 1509 2387 dt
(Pipeline ) 1503 2347 dt
(Run) 1548 2308 dt
1 pw
1 0 psp
/pen_rgb [0 0 0] def
brush_solid
/brush_rgb[0.753 0.753 0.753] def
359 189 84 1982 dr
1 pw
1 1 psp
/pen_rgb [0 0 0] def
brush_solid
/brush_rgb [1 1 1] def
327 159 100 1997 dr
grestore gsave
327 159 100 1997 sc
/fore_rgb [0 0 0] def
/back_rgb [1 1 1] def
10 /Helvetica-Bold f
/fore_rgb [0 0 0] def
grestore gsave
2550 3300 0 0 sc
/fore_rgb [0 0 0] def
/back_rgb [1 1 1] def
10 /Helvetica-Bold f
/fore_rgb [0 0 0] def
/back_rgb [1 1 1] def
10 /Helvetica-Bold f
(Astrometric ) 140 2096 dt
(Calibration) 154 2057 dt
1 pw
1 0 psp
/pen_rgb [0 0 0] def
brush_solid
/brush_rgb[0.753 0.753 0.753] def
271 138 2076 2999 dr
1 pw
1 1 psp
/pen_rgb [0 0 0] def
brush_solid
/brush_rgb [1 1 1] def
239 108 2092 3014 dr
grestore gsave
239 108 2092 3014 sc
/fore_rgb [0 0 0] def
/back_rgb [1 1 1] def
10 /Helvetica-Bold f
/fore_rgb [0 0 0] def
grestore gsave
2550 3300 0 0 sc
/fore_rgb [0 0 0] def
/back_rgb [1 1 1] def
10 /Helvetica-Bold f
/fore_rgb [0 0 0] def
/back_rgb [1 1 1] def
10 /Helvetica-Bold f
(Product) 2133 3062 dt
391 290 1942 854 dr
grestore gsave
391 290 1942 854 sc
/fore_rgb [0 0 0] def
/back_rgb [1 1 1] def
10 /Helvetica-Bold f
/fore_rgb [0 0 0] def
1942 985 mv
2333 985 dl
(primaryType) 1976 946 dt
(secondaryType) 1976 897 dt
grestore gsave
2550 3300 0 0 sc
/fore_rgb [0 0 0] def
/back_rgb [1 1 1] def
10 /Helvetica-Bold f
/fore_rgb [0 0 0] def
/back_rgb [1 1 1] def
10 /Helvetica-Bold f
(Spectroscopic ) 1989 1084 dt
(Target) 2075 1044 dt
1 pw
1 0 psp
/pen_rgb [0 0 0] def
brush_solid
/brush_rgb[0.753 0.753 0.753] def
271 138 1458 946 dr
1 pw
1 1 psp
/pen_rgb [0 0 0] def
brush_solid
/brush_rgb [1 1 1] def
239 108 1474 961 dr
grestore gsave
239 108 1474 961 sc
/fore_rgb [0 0 0] def
/back_rgb [1 1 1] def
10 /Helvetica-Bold f
/fore_rgb [0 0 0] def
grestore gsave
2550 3300 0 0 sc
/fore_rgb [0 0 0] def
/back_rgb [1 1 1] def
10 /Helvetica-Bold f
/fore_rgb [0 0 0] def
/back_rgb [1 1 1] def
10 /Helvetica-Bold f
(Object) 1529 1009 dt
1942 1012 mv
1713 1012 dl
brush_solid
/brush_rgb [0 0 0] def
brush_solid
/brush_rgb [1 1 1] def
16 15 1932 1012 do
brush_solid
/brush_rgb [0 0 0] def
1 pw
1 0 psp
/pen_rgb [0 0 0] def
brush_solid
/brush_rgb[0.753 0.753 0.753] def
367 235 84 1674 dr
1 pw
1 1 psp
/pen_rgb [0 0 0] def
brush_solid
/brush_rgb [1 1 1] def
335 205 100 1689 dr
grestore gsave
335 205 100 1689 sc
/fore_rgb [0 0 0] def
/back_rgb [1 1 1] def
10 /Helvetica-Bold f
/fore_rgb [0 0 0] def
grestore gsave
2550 3300 0 0 sc
/fore_rgb [0 0 0] def
/back_rgb [1 1 1] def
10 /Helvetica-Bold f
/fore_rgb [0 0 0] def
/back_rgb [1 1 1] def
10 /Helvetica-Bold f
(Final ) 213 1834 dt
(Photometric ) 140 1794 dt
(Calibration) 158 1755 dt
255 388 2082 1646 dr
grestore gsave
255 388 2082 1646 sc
/fore_rgb [0 0 0] def
/back_rgb [1 1 1] def
10 /Helvetica-Bold f
/fore_rgb [0 0 0] def
2082 1924 mv
2337 1924 dl
(startMu) 2116 1884 dt
(endMu) 2116 1836 dt
(field0) 2116 1787 dt
(nFields) 2116 1738 dt
(status) 2116 1689 dt
grestore gsave
2550 3300 0 0 sc
/fore_rgb [0 0 0] def
/back_rgb [1 1 1] def
10 /Helvetica-Bold f
/fore_rgb [0 0 0] def
/back_rgb [1 1 1] def
10 /Helvetica-Bold f
(Segment) 2122 1974 dt
2082 1969 mv
1713 1969 dl
brush_solid
/brush_rgb [0 0 0] def
16 15 2072 1969 do
/fore_rgb [0 0 0] def
/back_rgb [1 1 1] def
10 /Helvetica-Bold f
({same stripe}) 1745 1886 dt
2211 2625 mv
2211 3014 dl
brush_solid
/brush_rgb [1 1 1] def
2162 2930 b
2211 2967 l
2261 2930 l
2162 2930 dg
1 pw
1 0 psp
/pen_rgb [0 0 0] def
brush_solid
/brush_rgb[0.753 0.753 0.753] def
410 387 572 2197 dr
1 pw
1 1 psp
/pen_rgb [0 0 0] def
brush_solid
/brush_rgb [1 1 1] def
378 357 588 2212 dr
grestore gsave
378 357 588 2212 sc
/fore_rgb [0 0 0] def
/back_rgb [1 1 1] def
10 /Helvetica-Bold f
/fore_rgb [0 0 0] def
grestore gsave
2550 3300 0 0 sc
/fore_rgb [0 0 0] def
/back_rgb [1 1 1] def
10 /Helvetica-Bold f
/fore_rgb [0 0 0] def
/back_rgb [1 1 1] def
10 /Helvetica-Bold f
(Report) 710 2509 dt
1464 2376 mv
966 2376 dl
brush_solid
/brush_rgb [0 0 0] def
16 15 1454 2376 do
brush_solid
/brush_rgb [1 1 1] def
16 15 976 2376 do
/fore_rgb [0 0 0] def
/back_rgb [1 1 1] def
10 /Helvetica-Bold f
/fore_rgb [0 0 0] def
/back_rgb [1 1 1] def
10 /Helvetica-Bold f
(setObjectStatus) 1057 2366 dt
1464 2109 mv
427 2109 dl
brush_solid
/brush_rgb [0 0 0] def
16 15 1454 2109 do
brush_solid
/brush_rgb [1 1 1] def
16 15 437 2109 do
/fore_rgb [0 0 0] def
/back_rgb [1 1 1] def
10 /Helvetica-Bold f
/fore_rgb [0 0 0] def
/back_rgb [1 1 1] def
10 /Helvetica-Bold f
(mergeAstrometricCalibration) 659 2098 dt
1464 1820 mv
435 1820 dl
brush_solid
/brush_rgb [0 0 0] def
16 15 1454 1820 do
brush_solid
/brush_rgb [1 1 1] def
16 15 445 1820 do
/fore_rgb [0 0 0] def
/back_rgb [1 1 1] def
10 /Helvetica-Bold f
/fore_rgb [0 0 0] def
/back_rgb [1 1 1] def
10 /Helvetica-Bold f
(targetPhotometricCalibration) 661 1809 dt
1464 1735 mv
435 1735 dl
brush_solid
/brush_rgb [0 0 0] def
16 15 1454 1735 do
brush_solid
/brush_rgb [1 1 1] def
16 15 445 1735 do
/fore_rgb [0 0 0] def
/back_rgb [1 1 1] def
10 /Helvetica-Bold f
/fore_rgb [0 0 0] def
/back_rgb [1 1 1] def
10 /Helvetica-Bold f
(currentPhotometricCalibration) 647 1726 dt
1464 2034 mv
427 2034 dl
brush_solid
/brush_rgb [0 0 0] def
16 15 1454 2034 do
brush_solid
/brush_rgb [1 1 1] def
16 15 437 2034 do
/fore_rgb [0 0 0] def
/back_rgb [1 1 1] def
10 /Helvetica-Bold f
/fore_rgb [0 0 0] def
/back_rgb [1 1 1] def
10 /Helvetica-Bold f
(currentAstrometricCalibration) 650 2026 dt
1464 2278 mv
966 2278 dl
brush_solid
/brush_rgb [0 0 0] def
16 15 1454 2278 do
brush_solid
/brush_rgb [1 1 1] def
16 15 976 2278 do
/fore_rgb [0 0 0] def
/back_rgb [1 1 1] def
10 /Helvetica-Bold f
/fore_rgb [0 0 0] def
/back_rgb [1 1 1] def
10 /Helvetica-Bold f
(merge) 1153 2270 dt
1 pw
1 0 psp
/pen_rgb [0 0 0] def
brush_solid
/brush_rgb[0.753 0.753 0.753] def
271 185 1458 1264 dr
1 pw
1 1 psp
/pen_rgb [0 0 0] def
brush_solid
/brush_rgb [1 1 1] def
239 155 1474 1279 dr
grestore gsave
239 155 1474 1279 sc
/fore_rgb [0 0 0] def
/back_rgb [1 1 1] def
10 /Helvetica-Bold f
/fore_rgb [0 0 0] def
grestore gsave
2550 3300 0 0 sc
/fore_rgb [0 0 0] def
/back_rgb [1 1 1] def
10 /Helvetica-Bold f
/fore_rgb [0 0 0] def
/back_rgb [1 1 1] def
10 /Helvetica-Bold f
(Object ) 1523 1374 dt
(List) 1557 1335 dt
1589 1650 mv
1589 1434 dl
brush_solid
/brush_rgb [0 0 0] def
brush_solid
/brush_rgb [1 1 1] def
1569 1622 b
1589 1650 l
1609 1622 l
1589 1584 l
1569 1622 dg
brush_solid
/brush_rgb [0 0 0] def
16 15 1589 1444 do
2210 1646 mv
2211 1350 dl
1713 1350 dl
16 15 2210 1637 do
1733 1369 b
1733 1331 dl
/fore_rgb [0 0 0] def
/back_rgb [1 1 1] def
10 /Helvetica-Bold f
({0,1, or 2}) 1966 1564 dt
/fore_rgb [0 0 0] def
/back_rgb [1 1 1] def
10 /Helvetica-Bold f
({contiguous set}) 1745 1267 dt
2092 2512 mv
966 2512 dl
16 15 2082 2512 do
/fore_rgb [0 0 0] def
/back_rgb [1 1 1] def
10 /Helvetica-Bold f
/fore_rgb [0 0 0] def
/back_rgb [1 1 1] def
10 /Helvetica-Bold f
(selectTargets) 1394 2502 dt
1589 1279 mv
1589 1069 dl
brush_solid
/brush_rgb [1 1 1] def
1569 1251 b
1589 1279 l
1609 1251 l
1589 1213 l
1569 1251 dg
brush_solid
/brush_rgb [0 0 0] def
16 15 1589 1078 do
1 pw
1 2 psp
/pen_rgb [0 0 0] def
1884 1350 mv
1884 1969 dl
1 pw
1 1 psp
/pen_rgb [0 0 0] def
1864 1941 b
1884 1969 l
1904 1941 l
1864 1941 dg
/fore_rgb [0 0 0] def
/back_rgb [1 1 1] def
10 /Helvetica-Bold f
/fore_rgb [0 0 0] def
/back_rgb [1 1 1] def
10 /Helvetica-Bold f
(same) 1830 1648 dt
brush_solid
/brush_rgb [1 1 1] def
239 291 2092 2334 dr
grestore gsave
239 291 2092 2334 sc
/fore_rgb [0 0 0] def
/back_rgb [1 1 1] def
10 /Helvetica-Bold f
/fore_rgb [0 0 0] def
2092 2514 mv
2331 2514 dl
(stripe) 2126 2475 dt
(startMu) 2126 2426 dt
(endMu) 2126 2377 dt
grestore gsave
2550 3300 0 0 sc
/fore_rgb [0 0 0] def
/back_rgb [1 1 1] def
10 /Helvetica-Bold f
/fore_rgb [0 0 0] def
/back_rgb [1 1 1] def
10 /Helvetica-Bold f
(Chunk) 2147 2565 dt
2211 2334 mv
2211 2034 dl
brush_solid
/brush_rgb [0 0 0] def
brush_solid
/brush_rgb [1 1 1] def
2191 2306 b
2211 2334 l
2231 2306 l
2211 2269 l
2191 2306 dg
brush_solid
/brush_rgb [0 0 0] def
2231 2053 b
2191 2053 dl
grestore gsave
brush_solid
/brush_rgb [1 1 1] def
/fore_rgb [0 0 0] def
/back_rgb [1 1 1] def
12 /Helvetica-BoldOblique f
() 0 3254 dt
() 1275 3254 dt
() 2550 3254 dt
/fore_rgb [0 0 0] def
/back_rgb [1 1 1] def
10 /Helvetica f
(Mon May  5 19976:29:54 ) 0 58 dt
(Target Selection) 1124 58 dt
(1) 2527 58 dt
showpage
%%PageTrailer
% End of page 1
%%Trailer
%%DocumentFonts:
%%+ Times-Roman
%%+ Helvetica-Bold
%%+ Helvetica
%%+ Helvetica-BoldOblique
%%Pages: 1
end %%PROLOGUE
%% End of PostScript file
%%EOF