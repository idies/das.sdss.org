# Makefile.in generated by automake 1.10 from Makefile.am.
# test/src/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006  Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



pkgdatadir = $(datadir)/sdssdas
pkglibdir = $(libdir)/sdssdas
pkgincludedir = $(includedir)/sdssdas
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
check_PROGRAMS = print_das_config$(EXEEXT) merge_segment_pipe$(EXEEXT) \
	segment_overlap$(EXEEXT) eq2gc$(EXEEXT) gc2eq$(EXEEXT) \
	brittle_hdrint$(EXEEXT) brittle_fitscell$(EXEEXT) \
	raDecToXY$(EXEEXT) raDecToField$(EXEEXT) fileReadable$(EXEEXT)
subdir = test/src
DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/include_next.m4 \
	$(top_srcdir)/m4/longlong.m4 $(top_srcdir)/m4/mkdtemp.m4 \
	$(top_srcdir)/m4/stdint.m4 $(top_srcdir)/m4/stdlib_h.m4 \
	$(top_srcdir)/m4/tempname.m4 $(top_srcdir)/m4/unistd_h.m4 \
	$(top_srcdir)/m4/wchar.m4 $(top_srcdir)/m4/wint_t.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_CLEAN_FILES =
am_brittle_fitscell_OBJECTS = brittle_fitscell.$(OBJEXT) \
	brittle_fits.$(OBJEXT)
brittle_fitscell_OBJECTS = $(am_brittle_fitscell_OBJECTS)
brittle_fitscell_LDADD = $(LDADD)
am_brittle_hdrint_OBJECTS = brittle_hdrint.$(OBJEXT) \
	brittle_fits.$(OBJEXT)
brittle_hdrint_OBJECTS = $(am_brittle_hdrint_OBJECTS)
brittle_hdrint_LDADD = $(LDADD)
am_eq2gc_OBJECTS = eq2gc.$(OBJEXT) coord_xform.$(OBJEXT) \
	brittle_fits.$(OBJEXT) file_readable.$(OBJEXT)
eq2gc_OBJECTS = $(am_eq2gc_OBJECTS)
eq2gc_LDADD = $(LDADD)
am_fileReadable_OBJECTS = fileReadable.$(OBJEXT) \
	file_readable.$(OBJEXT)
fileReadable_OBJECTS = $(am_fileReadable_OBJECTS)
fileReadable_LDADD = $(LDADD)
am_gc2eq_OBJECTS = gc2eq.$(OBJEXT) coord_xform.$(OBJEXT) \
	brittle_fits.$(OBJEXT) file_readable.$(OBJEXT)
gc2eq_OBJECTS = $(am_gc2eq_OBJECTS)
gc2eq_LDADD = $(LDADD)
am_merge_segment_pipe_OBJECTS = merge_segment_pipe.$(OBJEXT) \
	merge_segments.$(OBJEXT) segment_list.$(OBJEXT) \
	read_segment.$(OBJEXT)
merge_segment_pipe_OBJECTS = $(am_merge_segment_pipe_OBJECTS)
merge_segment_pipe_LDADD = $(LDADD)
am_print_das_config_OBJECTS = print_das_config.$(OBJEXT) \
	das_config.$(OBJEXT)
print_das_config_OBJECTS = $(am_print_das_config_OBJECTS)
print_das_config_LDADD = $(LDADD)
am_raDecToField_OBJECTS = raDecToField.$(OBJEXT) find_fields.$(OBJEXT) \
	coord_xform.$(OBJEXT) brittle_fits.$(OBJEXT) \
	das_config.$(OBJEXT) file_readable.$(OBJEXT)
raDecToField_OBJECTS = $(am_raDecToField_OBJECTS)
raDecToField_LDADD = $(LDADD)
am_raDecToXY_OBJECTS = raDecToXY.$(OBJEXT) coord_xform.$(OBJEXT) \
	brittle_fits.$(OBJEXT) file_readable.$(OBJEXT)
raDecToXY_OBJECTS = $(am_raDecToXY_OBJECTS)
raDecToXY_LDADD = $(LDADD)
am_segment_overlap_OBJECTS = segment_overlap.$(OBJEXT) \
	seglist_overlap.$(OBJEXT) segment_list.$(OBJEXT) \
	read_segment.$(OBJEXT)
segment_overlap_OBJECTS = $(am_segment_overlap_OBJECTS)
segment_overlap_LDADD = $(LDADD)
DEFAULT_INCLUDES = -I.
depcomp = $(SHELL) $(top_srcdir)/config/depcomp
am__depfiles_maybe = depfiles
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
SOURCES = $(brittle_fitscell_SOURCES) $(brittle_hdrint_SOURCES) \
	$(eq2gc_SOURCES) $(fileReadable_SOURCES) $(gc2eq_SOURCES) \
	$(merge_segment_pipe_SOURCES) $(print_das_config_SOURCES) \
	$(raDecToField_SOURCES) $(raDecToXY_SOURCES) \
	$(segment_overlap_SOURCES)
DIST_SOURCES = $(brittle_fitscell_SOURCES) $(brittle_hdrint_SOURCES) \
	$(eq2gc_SOURCES) $(fileReadable_SOURCES) $(gc2eq_SOURCES) \
	$(merge_segment_pipe_SOURCES) $(print_das_config_SOURCES) \
	$(raDecToField_SOURCES) $(raDecToXY_SOURCES) \
	$(segment_overlap_SOURCES)
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /var/www/sdss.org/test.das/src/sdssdas-2.2/config/missing --run aclocal-1.10
AMTAR = ${SHELL} /var/www/sdss.org/test.das/src/sdssdas-2.2/config/missing --run tar
AUTOCONF = ${SHELL} /var/www/sdss.org/test.das/src/sdssdas-2.2/config/missing --run autoconf
AUTOHEADER = ${SHELL} /var/www/sdss.org/test.das/src/sdssdas-2.2/config/missing --run autoheader
AUTOMAKE = ${SHELL} /var/www/sdss.org/test.das/src/sdssdas-2.2/config/missing --run automake-1.10
AWK = gawk
BITSIZEOF_PTRDIFF_T = 
BITSIZEOF_SIG_ATOMIC_T = 
BITSIZEOF_SIZE_T = 
BITSIZEOF_WCHAR_T = 
BITSIZEOF_WINT_T = 
CC = gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -g -O2
CPP = gcc -E
CPPFLAGS = 
CYGPATH_W = echo
DEFS = -DPACKAGE_NAME=\"sdssdas\" -DPACKAGE_TARNAME=\"sdssdas\" -DPACKAGE_VERSION=\"2.2\" -DPACKAGE_STRING=\"sdssdas\ 2.2\" -DPACKAGE_BUGREPORT=\"neilsen@fnal.gov\" -DPACKAGE=\"sdssdas\" -DVERSION=\"2.2\" -DHAVE_LIBM=1 -DSTDC_HEADERS=1 -DHAVE_SYS_TYPES_H=1 -DHAVE_SYS_STAT_H=1 -DHAVE_STDLIB_H=1 -DHAVE_STRING_H=1 -DHAVE_MEMORY_H=1 -DHAVE_STRINGS_H=1 -DHAVE_INTTYPES_H=1 -DHAVE_STDINT_H=1 -DHAVE_UNISTD_H=1 -DHAVE_ASSERT_H=1 -DHAVE_STDIO_H=1 -DHAVE_SYS_STAT_H=1 -DHAVE_SYS_TYPES_H=1 -DHAVE__BOOL=1 -DHAVE_STDBOOL_H=1 -DDAS_CONFIG_FILE=\"/var/www/sdss.org/test.das/etc/sdssdas.conf\" -DHAVE_STDLIB_H=1 -DHAVE_MALLOC=1
DEPDIR = .deps
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /bin/grep -E
EXEEXT = 
GNULIB_CALLOC_POSIX = 
GNULIB_CHOWN = 
GNULIB_CLOSE = 
GNULIB_DUP2 = 
GNULIB_ENVIRON = 
GNULIB_FCHDIR = 
GNULIB_FSYNC = 
GNULIB_FTRUNCATE = 
GNULIB_GETCWD = 
GNULIB_GETDTABLESIZE = 
GNULIB_GETLOGIN_R = 
GNULIB_GETPAGESIZE = 
GNULIB_GETSUBOPT = 
GNULIB_LCHOWN = 
GNULIB_LSEEK = 
GNULIB_MALLOC_POSIX = 
GNULIB_MKDTEMP = 
GNULIB_MKDTEMP_OBJ = 
GNULIB_MKSTEMP = 
GNULIB_PUTENV = 
GNULIB_READLINK = 
GNULIB_REALLOC_POSIX = 
GNULIB_RPMATCH = 
GNULIB_SETENV = 
GNULIB_SLEEP = 
GNULIB_STRTOD = 
GNULIB_TEMPNAME_OBJ = 
GNULIB_UNISTD_H_SIGPIPE = 
GNULIB_UNSETENV = 
GNULIB_WCWIDTH = 
GNULIB_WRITE = 
GREP = /bin/grep
HAVE_CALLOC_POSIX = 
HAVE_DECL_ENVIRON = 
HAVE_DECL_GETLOGIN_R = 
HAVE_DECL_WCWIDTH = 
HAVE_DUP2 = 
HAVE_FSYNC = 
HAVE_FTRUNCATE = 
HAVE_GETDTABLESIZE = 
HAVE_GETPAGESIZE = 
HAVE_GETSUBOPT = 
HAVE_INTTYPES_H = 
HAVE_LONG_LONG_INT = 
HAVE_MALLOC_POSIX = 
HAVE_MKDTEMP = 
HAVE_OS_H = 
HAVE_READLINK = 
HAVE_REALLOC_POSIX = 
HAVE_RPMATCH = 
HAVE_SETENV = 
HAVE_SIGNED_SIG_ATOMIC_T = 
HAVE_SIGNED_WCHAR_T = 
HAVE_SIGNED_WINT_T = 
HAVE_SLEEP = 
HAVE_STDINT_H = 
HAVE_STRTOD = 
HAVE_SYS_BITYPES_H = 
HAVE_SYS_INTTYPES_H = 
HAVE_SYS_PARAM_H = 
HAVE_SYS_TYPES_H = 
HAVE_UNISTD_H = 
HAVE_UNSETENV = 
HAVE_UNSIGNED_LONG_LONG_INT = 
HAVE_WCHAR_H = 
HAVE_WINT_T = 
INCLUDE_NEXT = 
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
LDFLAGS = 
LIBOBJS = 
LIBS = -lm 
LTLIBOBJS = 
MAKEINFO = ${SHELL} /var/www/sdss.org/test.das/src/sdssdas-2.2/config/missing --run makeinfo
MKDIR_P = /bin/mkdir -p
NEXT_STDINT_H = 
NEXT_STDLIB_H = 
NEXT_UNISTD_H = 
NEXT_WCHAR_H = 
OBJEXT = o
PACKAGE = sdssdas
PACKAGE_BUGREPORT = neilsen@fnal.gov
PACKAGE_NAME = sdssdas
PACKAGE_STRING = sdssdas 2.2
PACKAGE_TARNAME = sdssdas
PACKAGE_VERSION = 2.2
PATH_SEPARATOR = :
PRAGMA_SYSTEM_HEADER = 
PTRDIFF_T_SUFFIX = 
REPLACE_CHOWN = 
REPLACE_CLOSE = 
REPLACE_FCHDIR = 
REPLACE_GETCWD = 
REPLACE_GETPAGESIZE = 
REPLACE_LCHOWN = 
REPLACE_LSEEK = 
REPLACE_MKSTEMP = 
REPLACE_PUTENV = 
REPLACE_STRTOD = 
REPLACE_WCWIDTH = 
REPLACE_WRITE = 
SED = /bin/sed
SET_MAKE = 
SHELL = /bin/sh
SIG_ATOMIC_T_SUFFIX = 
SIZE_T_SUFFIX = 
STDINT_H = 
STRIP = 
UNISTD_H_HAVE_WINSOCK2_H = 
VERSION = 2.2
VOID_UNSETENV = 
WCHAR_H = 
WCHAR_T_SUFFIX = 
WINT_T_SUFFIX = 
abs_builddir = /var/www/sdss.org/test.das/src/sdssdas-2.2/test/src
abs_srcdir = /var/www/sdss.org/test.das/src/sdssdas-2.2/test/src
abs_top_builddir = /var/www/sdss.org/test.das/src/sdssdas-2.2
abs_top_srcdir = /var/www/sdss.org/test.das/src/sdssdas-2.2
ac_ct_CC = gcc
am__include = include
am__leading_dot = .
am__quote = 
am__tar = ${AMTAR} chof - "$$tardir"
am__untar = ${AMTAR} xf -
bindir = ${exec_prefix}/bin
build_alias = 
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host_alias = 
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = $(SHELL) /var/www/sdss.org/test.das/src/sdssdas-2.2/config/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = /bin/mkdir -p
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /var/www/sdss.org/test.das
program_transform_name = s,x,x,
psdir = ${docdir}
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = /var/www/sdss.org/test.das/etc
target_alias = 
top_builddir = ../..
top_srcdir = ../..
AUTOMAKE_OPTIONS = gnu
INCLUDES = -I$(top_builddir)/include
print_das_config_SOURCES = print_das_config.c $(top_builddir)/src/das_config.c
merge_segment_pipe_SOURCES = merge_segment_pipe.c $(top_builddir)/src/merge_segments.c $(top_builddir)/src/segment_list.c $(top_builddir)/src/read_segment.c
segment_overlap_SOURCES = segment_overlap.c $(top_builddir)/src/seglist_overlap.c $(top_builddir)/src/segment_list.c $(top_builddir)/src/read_segment.c
eq2gc_SOURCES = eq2gc.c $(top_builddir)/src/coord_xform.c $(top_builddir)/src/brittle_fits.c $(top_builddir)/src/file_readable.c
gc2eq_SOURCES = gc2eq.c $(top_builddir)/src/coord_xform.c $(top_builddir)/src/brittle_fits.c $(top_builddir)/src/file_readable.c
brittle_hdrint_SOURCES = brittle_hdrint.c $(top_builddir)/src/brittle_fits.c
brittle_fitscell_SOURCES = brittle_fitscell.c $(top_builddir)/src/brittle_fits.c
raDecToXY_SOURCES = raDecToXY.c $(top_builddir)/src/coord_xform.c $(top_builddir)/src/brittle_fits.c $(top_builddir)/src/file_readable.c
raDecToField_SOURCES = raDecToField.c $(top_builddir)/src/find_fields.c $(top_builddir)/src/coord_xform.c $(top_builddir)/src/brittle_fits.c $(top_builddir)/src/das_config.c $(top_builddir)/src/file_readable.c
fileReadable_SOURCES = fileReadable.c $(top_builddir)/src/file_readable.c
all: all-am

.SUFFIXES:
.SUFFIXES: .c .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu  test/src/Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --gnu  test/src/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

clean-checkPROGRAMS:
	-test -z "$(check_PROGRAMS)" || rm -f $(check_PROGRAMS)
brittle_fitscell$(EXEEXT): $(brittle_fitscell_OBJECTS) $(brittle_fitscell_DEPENDENCIES) 
	@rm -f brittle_fitscell$(EXEEXT)
	$(LINK) $(brittle_fitscell_OBJECTS) $(brittle_fitscell_LDADD) $(LIBS)
brittle_hdrint$(EXEEXT): $(brittle_hdrint_OBJECTS) $(brittle_hdrint_DEPENDENCIES) 
	@rm -f brittle_hdrint$(EXEEXT)
	$(LINK) $(brittle_hdrint_OBJECTS) $(brittle_hdrint_LDADD) $(LIBS)
eq2gc$(EXEEXT): $(eq2gc_OBJECTS) $(eq2gc_DEPENDENCIES) 
	@rm -f eq2gc$(EXEEXT)
	$(LINK) $(eq2gc_OBJECTS) $(eq2gc_LDADD) $(LIBS)
fileReadable$(EXEEXT): $(fileReadable_OBJECTS) $(fileReadable_DEPENDENCIES) 
	@rm -f fileReadable$(EXEEXT)
	$(LINK) $(fileReadable_OBJECTS) $(fileReadable_LDADD) $(LIBS)
gc2eq$(EXEEXT): $(gc2eq_OBJECTS) $(gc2eq_DEPENDENCIES) 
	@rm -f gc2eq$(EXEEXT)
	$(LINK) $(gc2eq_OBJECTS) $(gc2eq_LDADD) $(LIBS)
merge_segment_pipe$(EXEEXT): $(merge_segment_pipe_OBJECTS) $(merge_segment_pipe_DEPENDENCIES) 
	@rm -f merge_segment_pipe$(EXEEXT)
	$(LINK) $(merge_segment_pipe_OBJECTS) $(merge_segment_pipe_LDADD) $(LIBS)
print_das_config$(EXEEXT): $(print_das_config_OBJECTS) $(print_das_config_DEPENDENCIES) 
	@rm -f print_das_config$(EXEEXT)
	$(LINK) $(print_das_config_OBJECTS) $(print_das_config_LDADD) $(LIBS)
raDecToField$(EXEEXT): $(raDecToField_OBJECTS) $(raDecToField_DEPENDENCIES) 
	@rm -f raDecToField$(EXEEXT)
	$(LINK) $(raDecToField_OBJECTS) $(raDecToField_LDADD) $(LIBS)
raDecToXY$(EXEEXT): $(raDecToXY_OBJECTS) $(raDecToXY_DEPENDENCIES) 
	@rm -f raDecToXY$(EXEEXT)
	$(LINK) $(raDecToXY_OBJECTS) $(raDecToXY_LDADD) $(LIBS)
segment_overlap$(EXEEXT): $(segment_overlap_OBJECTS) $(segment_overlap_DEPENDENCIES) 
	@rm -f segment_overlap$(EXEEXT)
	$(LINK) $(segment_overlap_OBJECTS) $(segment_overlap_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/brittle_fits.Po
include ./$(DEPDIR)/brittle_fitscell.Po
include ./$(DEPDIR)/brittle_hdrint.Po
include ./$(DEPDIR)/coord_xform.Po
include ./$(DEPDIR)/das_config.Po
include ./$(DEPDIR)/eq2gc.Po
include ./$(DEPDIR)/fileReadable.Po
include ./$(DEPDIR)/file_readable.Po
include ./$(DEPDIR)/find_fields.Po
include ./$(DEPDIR)/gc2eq.Po
include ./$(DEPDIR)/merge_segment_pipe.Po
include ./$(DEPDIR)/merge_segments.Po
include ./$(DEPDIR)/print_das_config.Po
include ./$(DEPDIR)/raDecToField.Po
include ./$(DEPDIR)/raDecToXY.Po
include ./$(DEPDIR)/read_segment.Po
include ./$(DEPDIR)/seglist_overlap.Po
include ./$(DEPDIR)/segment_list.Po
include ./$(DEPDIR)/segment_overlap.Po

.c.o:
	$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c $<

.c.obj:
	$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c `$(CYGPATH_W) '$<'`

brittle_fits.o: $(top_builddir)/src/brittle_fits.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT brittle_fits.o -MD -MP -MF $(DEPDIR)/brittle_fits.Tpo -c -o brittle_fits.o `test -f '$(top_builddir)/src/brittle_fits.c' || echo '$(srcdir)/'`$(top_builddir)/src/brittle_fits.c
	mv -f $(DEPDIR)/brittle_fits.Tpo $(DEPDIR)/brittle_fits.Po
#	source='$(top_builddir)/src/brittle_fits.c' object='brittle_fits.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o brittle_fits.o `test -f '$(top_builddir)/src/brittle_fits.c' || echo '$(srcdir)/'`$(top_builddir)/src/brittle_fits.c

brittle_fits.obj: $(top_builddir)/src/brittle_fits.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT brittle_fits.obj -MD -MP -MF $(DEPDIR)/brittle_fits.Tpo -c -o brittle_fits.obj `if test -f '$(top_builddir)/src/brittle_fits.c'; then $(CYGPATH_W) '$(top_builddir)/src/brittle_fits.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/brittle_fits.c'; fi`
	mv -f $(DEPDIR)/brittle_fits.Tpo $(DEPDIR)/brittle_fits.Po
#	source='$(top_builddir)/src/brittle_fits.c' object='brittle_fits.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o brittle_fits.obj `if test -f '$(top_builddir)/src/brittle_fits.c'; then $(CYGPATH_W) '$(top_builddir)/src/brittle_fits.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/brittle_fits.c'; fi`

coord_xform.o: $(top_builddir)/src/coord_xform.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT coord_xform.o -MD -MP -MF $(DEPDIR)/coord_xform.Tpo -c -o coord_xform.o `test -f '$(top_builddir)/src/coord_xform.c' || echo '$(srcdir)/'`$(top_builddir)/src/coord_xform.c
	mv -f $(DEPDIR)/coord_xform.Tpo $(DEPDIR)/coord_xform.Po
#	source='$(top_builddir)/src/coord_xform.c' object='coord_xform.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o coord_xform.o `test -f '$(top_builddir)/src/coord_xform.c' || echo '$(srcdir)/'`$(top_builddir)/src/coord_xform.c

coord_xform.obj: $(top_builddir)/src/coord_xform.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT coord_xform.obj -MD -MP -MF $(DEPDIR)/coord_xform.Tpo -c -o coord_xform.obj `if test -f '$(top_builddir)/src/coord_xform.c'; then $(CYGPATH_W) '$(top_builddir)/src/coord_xform.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/coord_xform.c'; fi`
	mv -f $(DEPDIR)/coord_xform.Tpo $(DEPDIR)/coord_xform.Po
#	source='$(top_builddir)/src/coord_xform.c' object='coord_xform.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o coord_xform.obj `if test -f '$(top_builddir)/src/coord_xform.c'; then $(CYGPATH_W) '$(top_builddir)/src/coord_xform.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/coord_xform.c'; fi`

file_readable.o: $(top_builddir)/src/file_readable.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT file_readable.o -MD -MP -MF $(DEPDIR)/file_readable.Tpo -c -o file_readable.o `test -f '$(top_builddir)/src/file_readable.c' || echo '$(srcdir)/'`$(top_builddir)/src/file_readable.c
	mv -f $(DEPDIR)/file_readable.Tpo $(DEPDIR)/file_readable.Po
#	source='$(top_builddir)/src/file_readable.c' object='file_readable.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o file_readable.o `test -f '$(top_builddir)/src/file_readable.c' || echo '$(srcdir)/'`$(top_builddir)/src/file_readable.c

file_readable.obj: $(top_builddir)/src/file_readable.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT file_readable.obj -MD -MP -MF $(DEPDIR)/file_readable.Tpo -c -o file_readable.obj `if test -f '$(top_builddir)/src/file_readable.c'; then $(CYGPATH_W) '$(top_builddir)/src/file_readable.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/file_readable.c'; fi`
	mv -f $(DEPDIR)/file_readable.Tpo $(DEPDIR)/file_readable.Po
#	source='$(top_builddir)/src/file_readable.c' object='file_readable.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o file_readable.obj `if test -f '$(top_builddir)/src/file_readable.c'; then $(CYGPATH_W) '$(top_builddir)/src/file_readable.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/file_readable.c'; fi`

merge_segments.o: $(top_builddir)/src/merge_segments.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT merge_segments.o -MD -MP -MF $(DEPDIR)/merge_segments.Tpo -c -o merge_segments.o `test -f '$(top_builddir)/src/merge_segments.c' || echo '$(srcdir)/'`$(top_builddir)/src/merge_segments.c
	mv -f $(DEPDIR)/merge_segments.Tpo $(DEPDIR)/merge_segments.Po
#	source='$(top_builddir)/src/merge_segments.c' object='merge_segments.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o merge_segments.o `test -f '$(top_builddir)/src/merge_segments.c' || echo '$(srcdir)/'`$(top_builddir)/src/merge_segments.c

merge_segments.obj: $(top_builddir)/src/merge_segments.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT merge_segments.obj -MD -MP -MF $(DEPDIR)/merge_segments.Tpo -c -o merge_segments.obj `if test -f '$(top_builddir)/src/merge_segments.c'; then $(CYGPATH_W) '$(top_builddir)/src/merge_segments.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/merge_segments.c'; fi`
	mv -f $(DEPDIR)/merge_segments.Tpo $(DEPDIR)/merge_segments.Po
#	source='$(top_builddir)/src/merge_segments.c' object='merge_segments.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o merge_segments.obj `if test -f '$(top_builddir)/src/merge_segments.c'; then $(CYGPATH_W) '$(top_builddir)/src/merge_segments.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/merge_segments.c'; fi`

segment_list.o: $(top_builddir)/src/segment_list.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT segment_list.o -MD -MP -MF $(DEPDIR)/segment_list.Tpo -c -o segment_list.o `test -f '$(top_builddir)/src/segment_list.c' || echo '$(srcdir)/'`$(top_builddir)/src/segment_list.c
	mv -f $(DEPDIR)/segment_list.Tpo $(DEPDIR)/segment_list.Po
#	source='$(top_builddir)/src/segment_list.c' object='segment_list.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o segment_list.o `test -f '$(top_builddir)/src/segment_list.c' || echo '$(srcdir)/'`$(top_builddir)/src/segment_list.c

segment_list.obj: $(top_builddir)/src/segment_list.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT segment_list.obj -MD -MP -MF $(DEPDIR)/segment_list.Tpo -c -o segment_list.obj `if test -f '$(top_builddir)/src/segment_list.c'; then $(CYGPATH_W) '$(top_builddir)/src/segment_list.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/segment_list.c'; fi`
	mv -f $(DEPDIR)/segment_list.Tpo $(DEPDIR)/segment_list.Po
#	source='$(top_builddir)/src/segment_list.c' object='segment_list.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o segment_list.obj `if test -f '$(top_builddir)/src/segment_list.c'; then $(CYGPATH_W) '$(top_builddir)/src/segment_list.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/segment_list.c'; fi`

read_segment.o: $(top_builddir)/src/read_segment.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT read_segment.o -MD -MP -MF $(DEPDIR)/read_segment.Tpo -c -o read_segment.o `test -f '$(top_builddir)/src/read_segment.c' || echo '$(srcdir)/'`$(top_builddir)/src/read_segment.c
	mv -f $(DEPDIR)/read_segment.Tpo $(DEPDIR)/read_segment.Po
#	source='$(top_builddir)/src/read_segment.c' object='read_segment.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o read_segment.o `test -f '$(top_builddir)/src/read_segment.c' || echo '$(srcdir)/'`$(top_builddir)/src/read_segment.c

read_segment.obj: $(top_builddir)/src/read_segment.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT read_segment.obj -MD -MP -MF $(DEPDIR)/read_segment.Tpo -c -o read_segment.obj `if test -f '$(top_builddir)/src/read_segment.c'; then $(CYGPATH_W) '$(top_builddir)/src/read_segment.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/read_segment.c'; fi`
	mv -f $(DEPDIR)/read_segment.Tpo $(DEPDIR)/read_segment.Po
#	source='$(top_builddir)/src/read_segment.c' object='read_segment.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o read_segment.obj `if test -f '$(top_builddir)/src/read_segment.c'; then $(CYGPATH_W) '$(top_builddir)/src/read_segment.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/read_segment.c'; fi`

das_config.o: $(top_builddir)/src/das_config.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT das_config.o -MD -MP -MF $(DEPDIR)/das_config.Tpo -c -o das_config.o `test -f '$(top_builddir)/src/das_config.c' || echo '$(srcdir)/'`$(top_builddir)/src/das_config.c
	mv -f $(DEPDIR)/das_config.Tpo $(DEPDIR)/das_config.Po
#	source='$(top_builddir)/src/das_config.c' object='das_config.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o das_config.o `test -f '$(top_builddir)/src/das_config.c' || echo '$(srcdir)/'`$(top_builddir)/src/das_config.c

das_config.obj: $(top_builddir)/src/das_config.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT das_config.obj -MD -MP -MF $(DEPDIR)/das_config.Tpo -c -o das_config.obj `if test -f '$(top_builddir)/src/das_config.c'; then $(CYGPATH_W) '$(top_builddir)/src/das_config.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/das_config.c'; fi`
	mv -f $(DEPDIR)/das_config.Tpo $(DEPDIR)/das_config.Po
#	source='$(top_builddir)/src/das_config.c' object='das_config.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o das_config.obj `if test -f '$(top_builddir)/src/das_config.c'; then $(CYGPATH_W) '$(top_builddir)/src/das_config.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/das_config.c'; fi`

find_fields.o: $(top_builddir)/src/find_fields.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT find_fields.o -MD -MP -MF $(DEPDIR)/find_fields.Tpo -c -o find_fields.o `test -f '$(top_builddir)/src/find_fields.c' || echo '$(srcdir)/'`$(top_builddir)/src/find_fields.c
	mv -f $(DEPDIR)/find_fields.Tpo $(DEPDIR)/find_fields.Po
#	source='$(top_builddir)/src/find_fields.c' object='find_fields.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o find_fields.o `test -f '$(top_builddir)/src/find_fields.c' || echo '$(srcdir)/'`$(top_builddir)/src/find_fields.c

find_fields.obj: $(top_builddir)/src/find_fields.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT find_fields.obj -MD -MP -MF $(DEPDIR)/find_fields.Tpo -c -o find_fields.obj `if test -f '$(top_builddir)/src/find_fields.c'; then $(CYGPATH_W) '$(top_builddir)/src/find_fields.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/find_fields.c'; fi`
	mv -f $(DEPDIR)/find_fields.Tpo $(DEPDIR)/find_fields.Po
#	source='$(top_builddir)/src/find_fields.c' object='find_fields.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o find_fields.obj `if test -f '$(top_builddir)/src/find_fields.c'; then $(CYGPATH_W) '$(top_builddir)/src/find_fields.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/find_fields.c'; fi`

seglist_overlap.o: $(top_builddir)/src/seglist_overlap.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT seglist_overlap.o -MD -MP -MF $(DEPDIR)/seglist_overlap.Tpo -c -o seglist_overlap.o `test -f '$(top_builddir)/src/seglist_overlap.c' || echo '$(srcdir)/'`$(top_builddir)/src/seglist_overlap.c
	mv -f $(DEPDIR)/seglist_overlap.Tpo $(DEPDIR)/seglist_overlap.Po
#	source='$(top_builddir)/src/seglist_overlap.c' object='seglist_overlap.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o seglist_overlap.o `test -f '$(top_builddir)/src/seglist_overlap.c' || echo '$(srcdir)/'`$(top_builddir)/src/seglist_overlap.c

seglist_overlap.obj: $(top_builddir)/src/seglist_overlap.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT seglist_overlap.obj -MD -MP -MF $(DEPDIR)/seglist_overlap.Tpo -c -o seglist_overlap.obj `if test -f '$(top_builddir)/src/seglist_overlap.c'; then $(CYGPATH_W) '$(top_builddir)/src/seglist_overlap.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/seglist_overlap.c'; fi`
	mv -f $(DEPDIR)/seglist_overlap.Tpo $(DEPDIR)/seglist_overlap.Po
#	source='$(top_builddir)/src/seglist_overlap.c' object='seglist_overlap.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o seglist_overlap.obj `if test -f '$(top_builddir)/src/seglist_overlap.c'; then $(CYGPATH_W) '$(top_builddir)/src/seglist_overlap.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/seglist_overlap.c'; fi`

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	if test -z "$(ETAGS_ARGS)$$tags$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	    $$tags $$unique; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) $(check_PROGRAMS)
check: check-am
all-am: Makefile
installdirs:
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-checkPROGRAMS clean-generic mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-exec-am:

install-html: install-html-am

install-info: install-info-am

install-man:

install-pdf: install-pdf-am

install-ps: install-ps-am

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am:

.MAKE: install-am install-strip

.PHONY: CTAGS GTAGS all all-am check check-am clean \
	clean-checkPROGRAMS clean-generic ctags distclean \
	distclean-compile distclean-generic distclean-tags distdir dvi \
	dvi-am html html-am info info-am install install-am \
	install-data install-data-am install-dvi install-dvi-am \
	install-exec install-exec-am install-html install-html-am \
	install-info install-info-am install-man install-pdf \
	install-pdf-am install-ps install-ps-am install-strip \
	installcheck installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic pdf pdf-am ps ps-am tags uninstall \
	uninstall-am

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
